{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kirca\\\\Desktop\\\\MyVer\\\\frontend\\\\src\\\\Home.js\",\n    _s2 = $RefreshSig$();\n\nimport \"./home.css\";\nimport volumefy from \"./volumefy.png\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\"; // HOME (INDEX) PAGE\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [id, setId] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userlist, setUserList] = useState([]); // Defining history. It'll be used while routing \n  // between pages.\n\n  let history = useHistory(); // This method is to add users to the database.\n\n  const addUser = event => {\n    _s();\n\n    React.useEffect(() => {\n      if (localStorage.getItem(\"response\")) {\n        history.push(\"/main\");\n      }\n\n      ;\n    });\n    var id = null;\n    setId(id); // If there's any null element, don't load the new\n    // page nor add the element to the table.\n\n    if (!username || !email || !password) {\n      event.preventDefault();\n    } // Add elements to the database.\n    else {\n        Axios.post(\"http://localhost:3001/create\", {\n          id: id,\n          username: username,\n          email: email,\n          password: password\n        }).then(() => {\n          setUserList([...userlist, {\n            id: id,\n            username: username,\n            email: email,\n            password: password\n          }]);\n        });\n        history.push(\"/main\");\n      }\n  }; // This method is to route to the login page.\n\n\n  _s(addUser, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const login = () => {\n    history.push(\"/login\");\n  }; // This method is to get the elements from the database.\n\n\n  const getUsers = () => {\n    Axios.get(\"http://localhost:3001/users\").then(response => {\n      setUserList(response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: volumefy,\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1text\",\n        children: \" VOLUMEFY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"email\",\n      onChange: event => {\n        setEmail(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"password\",\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addUser,\n      children: \"SIGN UP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"SIGN IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Home, \"dniBFza+OmuoEGi7VRKKfW+LvVw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/kirca/Desktop/MyVer/frontend/src/Home.js"],"names":["volumefy","React","useState","Axios","Link","useHistory","Home","id","setId","username","setUsername","email","setEmail","password","setPassword","userlist","setUserList","history","addUser","event","useEffect","localStorage","getItem","push","preventDefault","post","then","login","getUsers","get","response","data","target","value"],"mappings":"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","sourcesContent":["import \"./home.css\";\r\nimport volumefy from \"./volumefy.png\";\r\nimport React,{ useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// HOME (INDEX) PAGE\r\nconst Home = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userlist, setUserList] = useState([]);\r\n\r\n  // Defining history. It'll be used while routing \r\n  // between pages.\r\n  let history = useHistory();\r\n\r\n  // This method is to add users to the database.\r\n  const addUser = (event) => {\r\n\r\n    React.useEffect(() => {\r\n      if(localStorage.getItem(\"response\")){\r\n        history.push(\"/main\");\r\n      };\r\n    })\r\n\r\n\r\n    var id =  null;\r\n    setId(id);\r\n    // If there's any null element, don't load the new\r\n    // page nor add the element to the table.\r\n    if(!username || !email || !password){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/create\", {\r\n        id: id,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }).then(() => {\r\n        setUserList([\r\n          ...userlist,\r\n          {\r\n            id: id,\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n          },\r\n        ]);\r\n      });\r\n      history.push(\"/main\");\r\n    }\r\n  };\r\n\r\n  // This method is to route to the login page.\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  // This method is to get the elements from the database.\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {/* Name and logo */}\r\n      <div>\r\n        <img src={volumefy} className=\"logo\" />\r\n        <h1 className=\"h1text\"> VOLUMEFY</h1>\r\n        <hr />\r\n      </div>\r\n      {/* Inputs */}\r\n      <h2>Email Address</h2>\r\n      <input className=\"input\" type=\"email\" onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}/>\r\n      <h2>User Name</h2>\r\n      <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}/>\r\n      <h2>Password</h2>\r\n      <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}/>\r\n      <br />\r\n      <br />\r\n      <button onClick={addUser}>SIGN UP</button>\r\n      {/* Direct to the login page */}\r\n      <h2>Already have an account?</h2>\r\n      <button onClick={login}>SIGN IN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}