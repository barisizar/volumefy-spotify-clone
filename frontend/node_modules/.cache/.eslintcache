[{"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js":"1","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js":"2","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js":"3","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js":"4","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js":"5","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js":"6","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js":"7","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js":"8","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js":"9","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js":"10","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js":"11","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js":"12","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js":"13","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js":"14","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js":"15","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js":"16","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js":"17","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js":"18","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js":"19","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js":"20","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search_artist.js":"21","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile_artist.js":"22","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyMusic.js":"23","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyUpload.js":"24","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateAlbumSingle.js":"25","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateSong.js":"26","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend.js":"27","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend_artist.js":"28","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\friend_info.js":"29","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\friend_info_artist.js":"30","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend_info.js":"31","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend_info_artist.js":"32"},{"size":220,"mtime":1622566760000,"results":"33","hashOfConfig":"34"},{"size":902,"mtime":1624187834738,"results":"35","hashOfConfig":"34"},{"size":1898,"mtime":1624209009008,"results":"36","hashOfConfig":"34"},{"size":2764,"mtime":1624188446042,"results":"37","hashOfConfig":"34"},{"size":1940,"mtime":1624186766468,"results":"38","hashOfConfig":"34"},{"size":227,"mtime":1624275278394,"results":"39","hashOfConfig":"40"},{"size":3906,"mtime":1625016583182,"results":"41","hashOfConfig":"40"},{"size":3021,"mtime":1624922435827,"results":"42","hashOfConfig":"40"},{"size":5352,"mtime":1625022351890,"results":"43","hashOfConfig":"40"},{"size":2816,"mtime":1624894108724,"results":"44","hashOfConfig":"40"},{"size":4321,"mtime":1625040032828,"results":"45","hashOfConfig":"40"},{"size":4424,"mtime":1625028620576,"results":"46","hashOfConfig":"40"},{"size":0,"mtime":1624383057886,"results":"47","hashOfConfig":"40"},{"size":2825,"mtime":1624484593042,"results":"48","hashOfConfig":"40"},{"size":2741,"mtime":1624924352840,"results":"49","hashOfConfig":"40"},{"size":2728,"mtime":1624924041655,"results":"50","hashOfConfig":"40"},{"size":2715,"mtime":1624924385432,"results":"51","hashOfConfig":"40"},{"size":3255,"mtime":1624925432581,"results":"52","hashOfConfig":"40"},{"size":2689,"mtime":1624924292950,"results":"53","hashOfConfig":"40"},{"size":4863,"mtime":1625040917038,"results":"54","hashOfConfig":"40"},{"size":5016,"mtime":1625028563835,"results":"55","hashOfConfig":"40"},{"size":5253,"mtime":1625023097384,"results":"56","hashOfConfig":"40"},{"size":4855,"mtime":1625047791689,"results":"57","hashOfConfig":"40"},{"size":5534,"mtime":1625050156702,"results":"58","hashOfConfig":"40"},{"size":4296,"mtime":1625044450728,"results":"59","hashOfConfig":"40"},{"size":4640,"mtime":1625043956541,"results":"60","hashOfConfig":"40"},{"size":6936,"mtime":1625025116172,"results":"61","hashOfConfig":"40"},{"size":7058,"mtime":1625022587211,"results":"62","hashOfConfig":"40"},{"size":4640,"mtime":1625016566149,"results":"63","hashOfConfig":"40"},{"size":0,"mtime":1625016554658,"results":"64","hashOfConfig":"40"},{"size":3783,"mtime":1625017625354,"results":"65","hashOfConfig":"40"},{"size":3719,"mtime":1625017857739,"results":"66","hashOfConfig":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1v75x9b",{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"b5vr4y",{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js",[],["154","155"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js",["156","157","158"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js",["159","160"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js",["161","162","163","164"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js",["165","166"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js",[],["167","168"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js",["169","170","171","172","173","174","175","176"],"// This is the main app handling the route switches.\r\n\r\nimport './styles/App.css';\r\nimport Signup from \"./Signup\"\r\nimport Login from \"./Login\"\r\nimport Home from \"./Home\"\r\nimport Search from \"./Search\"\r\nimport Home_artist from \"./Home_artist\"\r\nimport Profile_artist from './Profile_artist';\r\nimport Search_artist from './Search_artist';\r\nimport Profile from \"./Profile\"\r\nimport MyMusic from './MyMusic';\r\nimport MyUpload from './MyUpload';\r\nimport Friend from \"./Friend\";\r\nimport Friend_artist from './Friend_artist';\r\nimport Friend_info from './Friend_info';\r\nimport Friend_info_artist from './Friend_info_artist';\r\nimport CreateAlbumSingle from './CreateAlbumSingle';\r\nimport CreateSong from './CreateSong';\r\nimport Username from \"./edits/Username\"\r\nimport Email from \"./edits/Email\"\r\nimport Gender from \"./edits/Gender\"\r\nimport Age from \"./edits/Age\"\r\nimport Artist from \"./edits/Artist\"\r\nimport Country from \"./edits/Country\"\r\nimport Phone from \"./edits/Phone\"\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      loggedIn: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n      return (\r\n        <Router>\r\n        <div className=\"App\">\r\n          {/* Routes */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Signup></Signup>\r\n            </Route>\r\n            <Route exact path=\"/Login\">\r\n              <Login></Login>\r\n            </Route>\r\n            <Route exact path=\"/Home\">\r\n              <Home></Home>\r\n            </Route>\r\n            <Route exact path=\"/Home_artist\">\r\n              <Home_artist></Home_artist>\r\n            </Route>\r\n            <Route exact path=\"/Profile_artist\">\r\n              <Profile_artist></Profile_artist>\r\n            </Route>\r\n            <Route exact path=\"/Search_artist\">\r\n              <Search_artist></Search_artist>\r\n            </Route>\r\n            <Route exact path=\"/Username\">\r\n              <Username></Username>\r\n            </Route>\r\n            <Route exact path=\"/Email\">\r\n              <Email></Email>\r\n            </Route>\r\n            <Route exact path=\"/Gender\">\r\n              <Gender></Gender>\r\n            </Route>\r\n            <Route exact path=\"/Age\">\r\n              <Age></Age>\r\n            </Route>\r\n            <Route exact path=\"/Artist\">\r\n              <Artist></Artist>\r\n            </Route>\r\n            <Route exact path=\"/Country\">\r\n              <Country></Country>\r\n            </Route>\r\n            <Route exact path=\"/Phone\">\r\n              <Phone></Phone>\r\n            </Route>\r\n            <Route exact path=\"/Profile\">\r\n              <Profile></Profile>\r\n            </Route>\r\n            <Route exact path=\"/Search\">\r\n              <Search></Search>\r\n            </Route>\r\n            <Route exact path=\"/MyMusic\">\r\n              <MyMusic></MyMusic>\r\n            </Route>\r\n            <Route exact path=\"/MyUpload\">\r\n              <MyUpload></MyUpload>\r\n            </Route>\r\n            <Route exact path=\"/CreateAlbumSingle\">\r\n              <CreateAlbumSingle></CreateAlbumSingle>\r\n            </Route>\r\n            <Route exact path=\"/CreateSong\">\r\n              <CreateSong></CreateSong>\r\n            </Route>\r\n            <Route exact path=\"/Friend\">\r\n              <Friend></Friend>\r\n            </Route>\r\n            <Route exact path=\"/Friend_artist\">\r\n              <Friend_artist></Friend_artist>\r\n            </Route>\r\n            <Route exact path=\"/Friend_info\">\r\n              <Friend_info></Friend_info>\r\n            </Route>\r\n            <Route exact path=\"/Friend_info_artist\">\r\n              <Friend_info_artist></Friend_info_artist>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js",["177","178","179","180"],"// Importing the necessary libraries.\r\nimport './styles/login.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\n\r\n// LOGIN PAGE\r\nconst Login = () => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [artist_name, setArtist_name] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method post a request to the /login, which will\r\n  // activate the loginUser function inside the controller.\r\n  // That method will return a token on success, which contains\r\n  // a status code (200 on success) and the user info. \r\n  const logUser = (e) => {\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      // Code is the return status, id is the user id and artist indicates\r\n      // if the user is also an artist or not.\r\n      var code = response.data.code;\r\n      var response = response.data.accessToken\r\n      var response2 = jwt.decode(response)\r\n      var user_id = response2.user_id;\r\n      var artist = response2.artist;\r\n      console.log(\"code\",code)\r\n      console.log(\"user_id\",user_id); \r\n      console.log(\"artist\",artist);\r\n     \r\n      // If the code is 200, login.\r\n      if(code === 200){\r\n        // If the user is an artist go to \"/home_artist\"\r\n        if(artist === 1){\r\n          localStorage.setItem(\"response\", response);\r\n          localStorage.setItem(\"user_id\", user_id);\r\n          localStorage.setItem(\"artist\", artist)\r\n          console.log(\"response\",response)\r\n          console.log(\"yarrrrrrrrrrrrrrrrrrrrrrrrrrrrrak\")\r\n\r\n          history.push(\"/home_artist\");\r\n        }\r\n        // If not, go to \"/home\"\r\n        else{\r\n          localStorage.setItem(\"response\", response);\r\n          localStorage.setItem(\"user_id\", user_id);\r\n          console.log(\"response\",response)\r\n          history.push(\"/home\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"test\" className=\"Login\">\r\n      {/* Name and logo */}\r\n        <div>\r\n            <img src={volumefy} className=\"logo\"/>\r\n            <h1 className=\"h1text\"> VOLUMEFY</h1><hr/>\r\n        </div>\r\n        {/* Inputs */}\r\n        <h2>Welcome back!</h2>\r\n        {/* Get the username */}\r\n        <h2>User Name</h2>\r\n        <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n        }}/>\r\n        {/* Get the password */}\r\n        <h2>Password</h2>\r\n        <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n        }} /><br/><br/>\r\n        {/* Login */}\r\n        <button onClick={logUser}>SIGN IN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js",["181","182","183","184"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Profile = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [user, setUser] = useState(\"\");\r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    var user_id = localStorage.getItem(\"user_id\");\r\n      if(localStorage.getItem(\"artist\")){\r\n        history.push(\"/profile_artist\")\r\n      }\r\n      Axios.post(\"http://localhost:3001/user\", {\r\n        user_id: user_id,\r\n      }).then((res) => {\r\n        setUser(res.data[0]);\r\n       })\r\n\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setFriend_ids(response.data);\r\n        // console.log(\"friend_ids:\", friend_ids)\r\n      }\r\n    });\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\")\r\n  }\r\n\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n\r\n  const toFriend = () => {\r\n    history.push(\"/Friend\")\r\n  }\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info\");\r\n  }\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        \r\n        <div className=\"middle_h\"> \r\n          <h3 className=\"userInfo\">user ID: {user.user_id}</h3>       <button className=\"editButton\">edit</button><br/>\r\n          <h3 className=\"userInfo\">username: {user.username}</h3>       <button className=\"editButton\">edit</button><br/>\r\n          <h3 className=\"userInfo\">email: {user.email}</h3>             <button className=\"editButton\">edit</button><br/>\r\n          <h3 className=\"userInfo\">gender: {user.gender}</h3>           <button className=\"editButton\" onClick={toGender}>edit</button><br/>\r\n          <h3 className=\"userInfo\">age: {user.age}</h3>                 <button className=\"editButton\" onClick={toAge}>edit</button><br/>\r\n          <h3 className=\"userInfo\">country: {user.country}</h3>         <button className=\"editButton\" onClick={toCountry}>edit</button><br/>\r\n          <h3 className=\"userInfo\">phone number: {user.phone}</h3>      <button className=\"editButton\" onClick={toPhone}>edit</button><br/>\r\n          <h3 className=\"userInfo\">Want to be an artist?</h3>          <button className=\"artistButton\" onClick={toArtist}>BECOME ONE!</button><br/>\r\n        </div>\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n        <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n        {friend_ids.map((val, key) => {\r\n              return (\r\n                <div className=\"friends\">\r\n                  <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                </div>\r\n              );\r\n          })\r\n        }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js",["185","186","187","188"],"import \"./styles/signup.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\n// HOME (INDEX) PAGE\r\nconst Signup = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userlist, setUserList] = useState([]);\r\n\r\n  // Defining history. It'll be used while routing \r\n  // between pages.\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method is to add users to the database.\r\n  const addUser = (event) => {\r\n    var id =  null;\r\n    setId(id);\r\n    // If there's any null element, don't load the new\r\n    // page nor add the element to the table.\r\n    if(!username || !email || !password){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/create\", {\r\n        id: id,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }).then(() => {\r\n        setUserList([\r\n          ...userlist,\r\n          {\r\n            id: id,\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n          },\r\n        ]);\r\n      });\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  // This method is to route to the login page.\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  // This method is to get the elements from the database.\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {/* Name and logo */}\r\n      <div>\r\n        <img src={volumefy} className=\"logo\" />\r\n        <h1 className=\"h1text\"> VOLUMEFY</h1>\r\n        <hr />\r\n      </div>\r\n      {/* Inputs */}\r\n      <h2>Email Address</h2>\r\n      <input className=\"input\" type=\"email\" onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}/>\r\n      <h2>User Name</h2>\r\n      <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}/>\r\n      <h2>Password</h2>\r\n      <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}/>\r\n      <br />\r\n      <br />\r\n      <button onClick={addUser}>SIGN UP</button>\r\n      {/* Direct to the login page */}\r\n      <h2>Already have an account?</h2>\r\n      <button onClick={login}>SIGN IN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js",["189","190","191","192"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport Axios from \"axios\";\r\n\r\nconst Home = () => {\r\n\r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const isArtist = localStorage.getItem(\"artist\")\r\n    if(isArtist == 1){\r\n      history.push(\"/home_artist\")\r\n    }\r\n\r\n    // Get the user_id from the local storage.\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser_id(user_id);\r\n\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setFriend_ids(response.data);\r\n      }\r\n    });\r\n\r\n    // Take the genres.\r\n    Axios.post(\"http://localhost:3001/getGenres\", {\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        console.log(\"response.data (genre)\",response.data)\r\n        setGenres(response.data)\r\n      }\r\n    });\r\n    },[]\r\n  )\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following methods are to route to the following pages.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n  const toFriend = () => {\r\n    history.push(\"/Friend\")\r\n  }\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          {genres.map((val, key) => {\r\n              return (\r\n                <div className=\"genreDiv\">\r\n                  <img className=\"albumCover\" src={val.img_src} alt=\"Italian Trulli\"></img><br />\r\n                  <button className=\"genreButtons\">{val.genre_name}</button>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n        <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n        {friend_ids.map((val, key) => {\r\n              return (\r\n                <div className=\"friends\">\r\n                  <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                </div>\r\n              );\r\n          })\r\n        }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              // src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              src=\"https://drive.google.com/drive/folders/1d9xWZlTNSKEx9mv8zLWhUXTDpnHZUq0A?usp=sharing/mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js",["193","194"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport {useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Home = () => {\r\n\r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n\r\n\r\n    // Get the user_id from the local storage.\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser_id(user_id);\r\n\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        console.log(\"response.data\",response.data)\r\n        setFriend_ids(response.data);\r\n        // console.log(\"friend_ids:\", friend_ids)\r\n      }\r\n    });\r\n\r\n    // Take the genres.\r\n    Axios.post(\"http://localhost:3001/getGenres\", {\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        console.log(\"response.data (genre)\",response.data)\r\n        setGenres(response.data)\r\n      }\r\n    });\r\n\r\n    },[])\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following methods are to route to the relevant pages.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n  const toFriend = () => {\r\n    history.push(\"/Friend_artist\")\r\n  }\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info_artist\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          {genres.map((val, key) => {\r\n              return (\r\n                <div className=\"genreDiv\">\r\n                  <img className=\"albumCover\" src={val.img_src} alt=\"Italian Trulli\"></img><br />\r\n                  <button className=\"genreButtons\">{val.genre_name}</button>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n          {friend_ids.map((val, key) => {\r\n                  return (\r\n                    <div className=\"friends\">\r\n                      <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                    </div>\r\n                  );\r\n              })\r\n            }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js",["195","196","197","198"],"// This is the page where the user is directed after logging in.\r\nimport \"../styles/home.css\";\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst Search = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    // console.log(response);\r\n    response = jwt.decode(response);\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(response);\r\n    // console.log(response.id);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n// This method is to route to the search page.\r\nconst toSearch = () => {\r\n    history.push(\"/Search\")\r\n}\r\n\r\n// This method is to change the email property of the user.\r\nconst editEmail = () => {\r\n    \r\n}\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>EMAIL</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js",["199","200","201"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Country = () => {\r\n\r\n  // useState for new Country.\r\n  const [newCountry, setNewCountry] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser(user_id);\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editCountry = (user_id) => {\r\n    Axios.put(\"http://localhost:3001/editCountry\", { country: newCountry, user_id: user_id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div className=\"middle\"> \r\n            <h1>Country</h1>\r\n            <input type=\"text\" placeholder=\"Enter the Country\" onChange={(event) => {setNewCountry(event.target.value);}}/><br /><br />\r\n            <button onClick={() => {editCountry(user);}}>{\" \"}Update</button>\r\n        </div>\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Country;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js",["202","203","204"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Gender = () => {\r\n\r\n  // useState for new gender.\r\n  const [newGender, setNewGender] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser(user_id);\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editGender = (user_id) => {\r\n    Axios.put(\"http://localhost:3001/editGender\", { gender: newGender, user_id: user_id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div className=\"middle\"> \r\n            <h1>Gender</h1>\r\n            <input type=\"text\" placeholder=\"Enter the gender\" onChange={(event) => {setNewGender(event.target.value);}}/><br /><br />\r\n            <button onClick={() => {editGender(user);}}>{\" \"}Update</button>\r\n        </div>\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Gender;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js",["205","206","207"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Phone = () => {\r\n\r\n  // useState for new Phone.\r\n  const [newPhone, setNewPhone] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser(user_id);\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editPhone = (user_id) => {\r\n    Axios.put(\"http://localhost:3001/editPhone\", { phone: newPhone, user_id: user_id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div className=\"middle\"> \r\n            <h1>Phone</h1>\r\n            <input type=\"text\" placeholder=\"Enter the Phone\" onChange={(event) => {setNewPhone(event.target.value);}}/><br /><br />\r\n            <button onClick={() => {editPhone(user);}}>{\" \"}Update</button>\r\n        </div>\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Phone;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js",["208","209","210","211"],"// This is the pArtist where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Artist = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  const [artist_id, setArtistId] = useState(\"\");\r\n  const [artist_name, setArtist_name] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storArtist and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    var user_id = localStorage.getItem(\"user_id\");\r\n    // console.log(response);\r\n    setArtistId(user_id);\r\n  },[])\r\n\r\n  // This method is to delete the access token from the local storArtist\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home pArtist.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile pArtist.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search pArtist.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const addArtist = (event) => {\r\n    Axios.put(\"http://localhost:3001/editArtist\", { artist: 1, user_id: artist_id })\r\n\r\n    if(!artist_name){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/createArtist\", {\r\n        artist_id: artist_id,\r\n        artist_name: artist_name,\r\n      }).then((response) => {\r\n        console.log(response);\r\n        localStorage.setItem(\"artist\", 1)\r\n        history.push(\"/Home_artist\");\r\n      }\r\n      )}\r\n  };\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n\r\n          <div className=\"middle\"> \r\n              <h1>Artist</h1>\r\n              <input type=\"text\" placeholder=\"Enter the artist name\" onChange={(event) => {setArtist_name(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {addArtist();}}>{\" \"}Create!</button>\r\n          </div>\r\n\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js",["212","213","214"],"// This is the pAge where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Age = () => {\r\n\r\n  // useState for new Age.\r\n  const [newAge, setNewAge] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storAge and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser(user_id);\r\n  })\r\n\r\n  // This method is to delete the access token from the local storAge\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home pAge.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile pAge.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search pAge.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editAge = (user_id) => {\r\n    Axios.put(\"http://localhost:3001/editAge\", { age: newAge, user_id: user_id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div className=\"middle\"> \r\n            <h1>Age</h1>\r\n            <input type=\"text\" placeholder=\"Enter the Age\" onChange={(event) => {setNewAge(event.target.value);}}/><br /><br />\r\n            <button onClick={() => {editAge(user);}}>{\" \"}Update</button>\r\n        </div>\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Age;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js",["215","216","217","218","219"],"// This is the page where the user is directed after logging in.\r\nimport \"./styles/home.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\n\r\nconst Search = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  const [song_name, setSong_name] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n\r\n  const [source, setSource] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const isArtist = localStorage.getItem(\"artist\")\r\n    if(isArtist == 1){\r\n      history.push(\"/search_artist\")\r\n    }\r\n\r\n    // Get the user_id from the local storage.\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser_id(user_id);\r\n\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        console.log(\"response.data\",response.data)\r\n        setFriend_ids(response.data);\r\n        // console.log(\"friend_ids:\", friend_ids)\r\n      }\r\n    });\r\n    },[]\r\n  )\r\n\r\n\r\n  // This function is to search the tracks.\r\n  const searchTrack = () => {\r\n    Axios.post(\"http://localhost:3001/searchTrack\", {\r\n      song_name: song_name,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setResult(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info\");\r\n  }\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following methods are to route to the relevant page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n  const toFriend = () => {\r\n    history.push(\"/Friend\")\r\n  }\r\n\r\n  // This method is to change to song.\r\n  const changeSong = (param) => {\r\n    setSource(param)\r\n  }\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SEARCH</h1>\r\n          {/* Search results */}\r\n          <input className=\"input\" type=\"text\" onChange={(event) => {setSong_name(event.target.value);}}/>\r\n          <button className=\"searchButton2\" onClick={searchTrack}></button><br />\r\n          <h4 className=\"songInfoLeft\">Song</h4><h4 className=\"songInfoMiddle\">Album</h4><h4 className=\"songInfoRight\">Artist</h4>\r\n          {result.map((val, key) => {\r\n              return (\r\n                <div className=\"tracks\">\r\n                  <button className=\"likeButton\"></button>\r\n                  <button className =\"track\" onClick={() => setSource(val.song_src)}>{val.song_name}</button>\r\n                  <button className =\"track\" onClick={() => setSource(val.song_src)}>{val.album_name}</button>\r\n                  <button className =\"track\" onClick={() => setSource(val.song_src)}>{val.artist_name}</button>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n          {friend_ids.map((val, key) => {\r\n              return (\r\n                <div className=\"friends\">\r\n                  <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                </div>\r\n              );\r\n          })\r\n        }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              src={source}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search_artist.js",["220","221","222","223"],"// This is the page where the user is directed after logging in.\r\nimport \"./styles/home.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\n\r\nconst Search_artist = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  const [song_name, setSong_name] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n\r\n  const [source, setSource] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n\r\n    const isArtist = localStorage.getItem(\"artist\")\r\n\r\n    // Get the user_id from the local storage.\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser_id(user_id);\r\n\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        console.log(\"response.data\",response.data)\r\n        setFriend_ids(response.data);\r\n        // console.log(\"friend_ids:\", friend_ids)\r\n      }\r\n    });\r\n\r\n    },[])\r\n\r\n\r\n  // This function is to search the tracks.\r\n  const searchTrack = () => {\r\n    Axios.post(\"http://localhost:3001/searchTrack\", {\r\n      song_name: song_name,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setResult(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following methods are to route to the relevant page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n  const toFriend = () => {\r\n    history.push(\"/Friend_artist\")\r\n  }\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info_artist\");\r\n  }\r\n\r\n  // This method is to change to song.\r\n  const changeSong = (param) => {\r\n    setSource(param)\r\n  }\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SEARCH</h1>\r\n          {/* Search results */}\r\n          <input className=\"input\" type=\"text\" onChange={(event) => {setSong_name(event.target.value);}}/>\r\n          <button className=\"searchButton2\" onClick={searchTrack}></button><br />\r\n          <h4 className=\"songInfoLeft\">Song</h4><h4 className=\"songInfoMiddle\">Album</h4><h4 className=\"songInfoRight\">Artist</h4>\r\n          {result.map((val, key) => {\r\n              return (\r\n                <div className=\"tracks\">\r\n                  <button className=\"likeButton\"></button>\r\n                  <button className =\"track\" onClick={() => setSource(val.song_src)}>{val.song_name}</button>\r\n                  <button className =\"track\" onClick={() => setSource(val.song_src)}>{val.album_name}</button>\r\n                  <button className =\"track\" onClick={() => setSource(val.song_src)}>{val.artist_name}</button>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n          {friend_ids.map((val, key) => {\r\n                  return (\r\n                    <div className=\"friends\">\r\n                      <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                    </div>\r\n                  );\r\n              })\r\n            }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              src={source}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search_artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile_artist.js",["224","225","226","227","228"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Profile = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [user, setUser] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  \r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    var user_id = localStorage.getItem(\"user_id\");\r\n      if(localStorage.getItem(\"artist\")){\r\n        history.push(\"/profile_artist\")\r\n      }\r\n      Axios.post(\"http://localhost:3001/user\", {\r\n        user_id: user_id,\r\n      }).then((res) => {\r\n        // console.log(\"res\",res);\r\n        // console.log(\"res.data\",res.data);\r\n        setUser(res.data[0]);\r\n        // console.log(\"userrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\",user.user_id);\r\n       })\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setFriend_ids(response.data);\r\n      }\r\n    });\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following methods are to route to the relevant page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\") \r\n  }\r\n  const toFriend = () => {\r\n    history.push(\"/Friend_artist\")\r\n  }\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info_artist\");\r\n  }\r\n\r\n  \r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br /><br />\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n\r\n        <div className=\"middle_h\"> \r\n          <h3 className=\"userInfo\">artist ID: {user.user_id}</h3>       <button className=\"editButton\">edit</button><br/>\r\n          <h3 className=\"userInfo\">username: {user.username}</h3>       <button className=\"editButton\">edit</button><br/>\r\n          <h3 className=\"userInfo\">email: {user.email}</h3>             <button className=\"editButton\">edit</button><br/>\r\n          <h3 className=\"userInfo\">gender: {user.gender}</h3>           <button className=\"editButton\" onClick={toGender}>edit</button><br/>\r\n          <h3 className=\"userInfo\">age: {user.age}</h3>                 <button className=\"editButton\" onClick={toAge}>edit</button><br/>\r\n          <h3 className=\"userInfo\">country: {user.country}</h3>         <button className=\"editButton\" onClick={toCountry}>edit</button><br/>\r\n          <h3 className=\"userInfo\">phone number: {user.phone}</h3>      <button className=\"editButton\" onClick={toPhone}>edit</button><br/>\r\n        </div>\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n          {friend_ids.map((val, key) => {\r\n                  return (\r\n                    <div className=\"friends\">\r\n                      <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                    </div>\r\n                  );\r\n              })\r\n            }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyMusic.js",["229","230","231","232","233","234"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyUpload.js",["235","236","237","238","239"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateAlbumSingle.js",["240","241","242"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport {useState} from \"react\";\r\nimport Axios from \"axios\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst CreateAlbumSingle = () => {\r\n\r\n  const [album_id, setAlbum_id] = useState(\"\");\r\n  const [artist_id  , setArtist_id] = useState(\"\");\r\n  const [album_name, setAlbum_name] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [img_src, setImg_src] = useState(\"\");\r\n    \r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    var user_id = localStorage.getItem(\"user_id\");\r\n    setArtist_id(user_id)\r\n\r\n  },[])\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  // This method is to route to the my music page.\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n\r\n  // This method is to add an album to the database.\r\n  const addAlbum = (event) => {\r\n\r\n    var album_id =  null;\r\n    setAlbum_id(album_id);\r\n\r\n    if(!album_name || !year || !img_src){\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Add elements to the database.\r\n    else{\r\n      \r\n      Axios.post(\"http://localhost:3001/createAlbum\", {\r\n        album_id: album_id,\r\n        artist_id: artist_id,           \r\n        album_name: album_name,\r\n        year: year,\r\n        img_src: img_src\r\n      }).then((response) => {\r\n        localStorage.setItem(\"album_id\", response.data.album_id)\r\n        history.push(\"/CreateSong\")\r\n      }\r\n      )}\r\n  };\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>CREATE ALBUM/SINGLE</h1>\r\n          <input type=\"text\" placeholder=\"Enter the album name\" onChange={(event) => {setAlbum_name(event.target.value);}}/><br /><br />\r\n          <input type=\"text\" placeholder=\"Enter the year\" onChange={(event) => {setYear(event.target.value);}}/><br /><br />\r\n          <input type=\"text\" placeholder=\"Enter the album cover's source\" onChange={(event) => {setImg_src(event.target.value);}}/><br /><br />\r\n          <button onClick={() => {addAlbum();}}>{\" \"}Create!</button>\r\n\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default CreateAlbumSingle;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateSong.js",["243","244","245","246"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport {useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst CreateSong = () => {\r\n  \r\n  const [song_id, setSong_id] = useState(\"\");   \r\n  const [album_id, setAlbum_id] = useState(\"\");                                    \r\n  const [song_name, setSong_name] = useState(\"\");\r\n  const [genre_id, setGenre_id] = useState(\"\");\r\n  const [song_src, setSong_src] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    var album_id = localStorage.getItem(\"album_id\");\r\n\r\n    setAlbum_id(album_id);\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  // This method is to route to the my music page.\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n\r\n  const addSong = (event) => {\r\n  \r\n    // Add elements to the database.\r\n \r\n      console.log(\"ıcerdeyım\")\r\n      Axios.post(\"http://localhost:3001/createSong\", {\r\n        song_id : null,\r\n        album_id : album_id,\r\n        song_name : song_name,\r\n        genre_id : genre_id,\r\n        song_src : song_src\r\n      }).then((response) => {\r\n        console.log(response);\r\n        history.push(\"/CreateSong\")\r\n      }\r\n      )\r\n  };\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>CREATE SONG</h1>\r\n          <input type=\"text\" placeholder=\"Enter the song name\" onChange={(event) => {setSong_name(event.target.value);}}/><br /><br />\r\n          <input type=\"text\" placeholder=\"Enter the music source\" onChange={(event) => {setSong_src(event.target.value);}}/><br /><br />\r\n          <select className=\"genreSelectTag\" placeholder=\"Enter the genre\" onChange={(event) => {setGenre_id(event.target.value);}}>\r\n            <option value=\"1\">Classical</option>                                                              \r\n            <option value=\"2\">EDM</option>\r\n            <option value=\"3\">Flamenco</option>\r\n            <option value=\"4\">Heavy Metal</option>\r\n            <option value=\"5\">Jazz </option>\r\n            <option value=\"6\">Pop</option>\r\n            <option value=\"7\">Post Punk</option>\r\n            <option value=\"8\">Rock</option>\r\n            <option value=\"9\">Vaporwave</option>\r\n        </select><br /><br />\r\n          <button onClick={() => {addSong();}}>{\" \"}Create</button><br /><br />\r\n          <button onClick={toMyMusic}>DONE</button>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default CreateSong;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend.js",["247","248","249"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport Axios from \"axios\";\r\n\r\nconst Friend = () => {\r\n\r\n  // Use states.\r\n  const [username, setUsername] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n  const [sender_id, setSender_id] = useState(\"\");\r\n  const [request, setRequest] = useState([]);\r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n\r\n    const isArtist = localStorage.getItem(\"artist\")\r\n    if(isArtist == 1){\r\n      history.push(\"/Friend_artist\")\r\n    }\r\n\r\n    const sender = localStorage.getItem(\"user_id\");\r\n    setSender_id(sender);\r\n\r\n    // Get the user_id from the local storage.\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser_id(user_id);\r\n\r\n    // Take the friendship requests.\r\n    Axios.post(\"http://localhost:3001/getFriendRequests\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setRequest(response.data);\r\n      }\r\n    });\r\n\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        console.log(\"response.data\",response.data)\r\n        setFriend_ids(response.data);\r\n        // console.log(\"friend_ids:\", friend_ids)\r\n      }\r\n    });\r\n    \r\n    },[])\r\n\r\n  // This method is to add users to the database.\r\n  const friendRequest = (receiver_id) => {\r\n    if(receiver_id){\r\n      Axios.post(\"http://localhost:3001/friendRequest\", {\r\n        sender_id: sender_id,\r\n        receiver_id: receiver_id,\r\n        approval: null,\r\n      })\r\n    }\r\n  };\r\n\r\n  // This function is to search the users.\r\n  const searchUser = () => {\r\n    Axios.post(\"http://localhost:3001/searchUser\", {\r\n        sender_id: sender_id,\r\n        username: username,\r\n    }).then((response) => {\r\n        if (response.data) {\r\n        setResult(response.data);\r\n        }\r\n    });\r\n  };\r\n\r\n  // This function is to search the users.\r\n  const acceptRequest = (sender_id) => {\r\n    console.log(\"sender_id bunu silllllllllllllllllllll\",sender_id)\r\n    Axios.post(\"http://localhost:3001/accept\", {\r\n        sender_id: sender_id,\r\n        receiver_id: user_id,\r\n    }).then((response) => {\r\n      console.log(\"ajashasdhadshdasjadsjads\",response)\r\n    });\r\n  };\r\n\r\n  // This function is to search the users.\r\n  const declineRequest = (sender_id) => {\r\n    console.log(\"sender_id bunu silllllllllllllllllllll\",sender_id)\r\n    Axios.post(\"http://localhost:3001/decline\", {\r\n        sender_id: sender_id,\r\n        receiver_id: user_id,\r\n    }).then((response) => {\r\n      console.log(\"ajashasdhadshdasjadsjads\",response)\r\n    });\r\n  };\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following methods are to route to the relevant pages.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n  const toFriend = () => {\r\n    history.push(\"/Friend\")\r\n  }\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br /><br />\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <div className=\"middleLeft\">\r\n              <h2>Search User</h2>\r\n              <input className=\"input\" type=\"text\" onChange={(event) => {setUsername(event.target.value);}}/>\r\n              <button className=\"searchButton2\" onClick={searchUser}></button><br />\r\n              <h4 className=\"userInfoLeft\">Username</h4><h4 className=\"userInfoRight\">User ID</h4>\r\n              {result.map((val, key) => {\r\n                // if(!added.includes(val.user_id)){\r\n                  return (\r\n                    <div className=\"users\">\r\n                      <button className=\"username\">{val.username}</button>\r\n                      <button className=\"user_id\">{val.user_id}</button>\r\n                      <button className=\"addUser\" onClick={()=>friendRequest(val.user_id)}>+</button><br />                       \r\n                    </div>\r\n                  );\r\n                // }\r\n               })\r\n              }\r\n          </div>\r\n          <div className=\"middleRight\">\r\n              <h2>Friend Requests</h2>\r\n              {request.map((val, key) => {\r\n              return (\r\n                <div className=\"tracks\">\r\n                  <h4>The user {val.username} sent you a friendship request.</h4>\r\n                  <button className=\"requestButton\" onClick={()=>acceptRequest(val.sender_id)}>Accept</button>\r\n                  <button className=\"requestButton\" onClick={()=>declineRequest(val.sender_id)}>Decline</button>\r\n                </div>\r\n                    );\r\n                })\r\n              }\r\n          </div>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n        <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n        {friend_ids.map((val, key) => {\r\n              return (\r\n                <div className=\"friends\">\r\n                  <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                </div>\r\n              );\r\n          })\r\n        }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n  }\r\n\r\n  export default Friend;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend_artist.js",["250","251"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport Axios from \"axios\";\r\n\r\nconst Friend_artist = () => {\r\n\r\n  // Use states.\r\n  const [username, setUsername] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n  const [sender_id, setSender_id] = useState(\"\");\r\n  const [request, setRequest] = useState([]);\r\n\r\n  const [user_id, setUser_id] = useState(\"\");\r\n  const [friend_ids, setFriend_ids] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n\r\n    const isArtist = localStorage.getItem(\"artist\")\r\n\r\n    const sender = localStorage.getItem(\"user_id\");\r\n    setSender_id(sender);\r\n\r\n    // Get the user_id from the local storage.\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    setUser_id(user_id);\r\n\r\n    // Take the friendship requests.\r\n    Axios.post(\"http://localhost:3001/getFriendRequests\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setRequest(response.data);\r\n      }\r\n    });\r\n\r\n    // Take the friend ids.\r\n    Axios.post(\"http://localhost:3001/getFriends\", {\r\n      receiver_id: user_id,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        console.log(\"response.data\",response.data)\r\n        setFriend_ids(response.data);\r\n        // console.log(\"friend_ids:\", friend_ids)\r\n      }\r\n    });\r\n\r\n    },[])\r\n\r\n  // This method is to add users to the database.\r\n  const friendRequest = (receiver_id) => {\r\n    if(receiver_id){\r\n      Axios.post(\"http://localhost:3001/friendRequest\", {\r\n        sender_id: sender_id,\r\n        receiver_id: receiver_id,\r\n        approval: null,\r\n      })\r\n    }\r\n  };\r\n\r\n  // This function is to search the users.\r\n  const searchUser = () => {\r\n    Axios.post(\"http://localhost:3001/searchUser\", {\r\n        sender_id: sender_id,\r\n        username: username,\r\n    }).then((response) => {\r\n        if (response.data) {\r\n        setResult(response.data);\r\n        }\r\n    });\r\n  };\r\n\r\n  // This function is to search the users.\r\n  const acceptRequest = (sender_id) => {\r\n    console.log(\"sender_id bunu silllllllllllllllllllll\",sender_id)\r\n    Axios.post(\"http://localhost:3001/accept\", {\r\n        sender_id: sender_id,\r\n        receiver_id: user_id,\r\n    }).then((response) => {\r\n      console.log(\"ajashasdhadshdasjadsjads\",response)\r\n    });\r\n  };\r\n\r\n  // This function is to search the users.\r\n  const declineRequest = (sender_id) => {\r\n    console.log(\"sender_id bunu silllllllllllllllllllll\",sender_id)\r\n    Axios.post(\"http://localhost:3001/decline\", {\r\n        sender_id: sender_id,\r\n        receiver_id: user_id,\r\n    }).then((response) => {\r\n      console.log(\"ajashasdhadshdasjadsjads\",response)\r\n    });\r\n  };\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following methods are to route to the relevant pages.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n  const toFriend = () => {\r\n    history.push(\"/Friend\")\r\n  }\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n  const toFriendInfo = (friend_id) => {\r\n    console.log(\"friend_id\", friend_id)\r\n    localStorage.setItem(\"friend_id\", friend_id);\r\n    history.push(\"/friend_info_artist\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br /><br />\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <div className=\"middleLeft\">\r\n              <h2>Search User</h2>\r\n              <input className=\"input\" type=\"text\" onChange={(event) => {setUsername(event.target.value);}}/>\r\n              <button className=\"searchButton2\" onClick={searchUser}></button><br />\r\n              <h4 className=\"userInfoLeft\">Username</h4><h4 className=\"userInfoRight\">User ID</h4>\r\n              {result.map((val, key) => {\r\n                // if(!added.includes(val.user_id)){\r\n                  return (\r\n                    <div className=\"users\">\r\n                      <button className=\"username\">{val.username}</button>\r\n                      <button className=\"user_id\">{val.user_id}</button>\r\n                      <button className=\"addUser\" onClick={()=>friendRequest(val.user_id)}>+</button><br />                       \r\n                    </div>\r\n                  );\r\n                // }\r\n            })\r\n          }\r\n          </div>\r\n          <div className=\"middleRight\">\r\n              <h2>Friend Requests</h2>\r\n              {request.map((val, key) => {\r\n              return (\r\n                <div className=\"tracks\">\r\n                  <h4>The user {val.username} sent you a friendship request.</h4>\r\n                  <button className=\"requestButton\" onClick={()=>acceptRequest(val.sender_id)}>Accept</button>\r\n                  <button className=\"requestButton\" onClick={()=>declineRequest(val.sender_id)}>Decline</button>\r\n                </div>\r\n                    );\r\n                })\r\n              }\r\n          </div>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n        <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n            {friend_ids.map((val, key) => {\r\n                  return (\r\n                    <div className=\"friends\">\r\n                      <button className=\"toUserButtons\" onClick={()=>toFriendInfo(val.friend)}>{val.friend}</button>\r\n                    </div>\r\n                  );\r\n              })\r\n            }\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n  }\r\n\r\n  export default Friend_artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\friend_info.js",["252","253","254","255"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\friend_info_artist.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend_info.js",["256","257","258","259","260","261"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\n\r\nconst Friend_info = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [user, setUser] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    var user_id = localStorage.getItem(\"friend_id\");\r\n      if(localStorage.getItem(\"artist\")){\r\n        history.push(\"/Friend_info_artist\")\r\n      }\r\n      Axios.post(\"http://localhost:3001/user\", {\r\n        user_id: user_id,\r\n      }).then((res) => {\r\n        // console.log(\"res\",res);\r\n        // console.log(\"res.data\",res.data);\r\n        setUser(res.data[0]);\r\n        // console.log(\"userrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\",user.user_id);\r\n       })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\")\r\n  }\r\n\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n\r\n  const toFriend = () => {\r\n    history.push(\"/Friend\")\r\n  }\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        \r\n        <div className=\"middle_h\"> \r\n          <h3 className=\"userInfo\">user ID: {user.user_id}</h3> <br /><br />     \r\n          <h3 className=\"userInfo\">username: {user.username}</h3><br /><br />\r\n          <h3 className=\"userInfo\">Liked songs: </h3>\r\n\r\n        </div>\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n        <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Friend_info;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Friend_info_artist.js",["262","263","264","265","266","267"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\n\r\nconst Friend_info_artist = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [user, setUser] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    var user_id = localStorage.getItem(\"friend_id\");\r\n     \r\n      Axios.post(\"http://localhost:3001/user\", {\r\n        user_id: user_id,\r\n      }).then((res) => {\r\n        // console.log(\"res\",res);\r\n        // console.log(\"res.data\",res.data);\r\n        setUser(res.data[0]);\r\n        // console.log(\"userrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\",user.user_id);\r\n       })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\")\r\n  }\r\n\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n\r\n  const toFriend = () => {\r\n    history.push(\"/Friend\")\r\n  }\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n          \r\n        </div>\r\n        \r\n        <div className=\"middle_h\"> \r\n          <h3 className=\"userInfo\">user ID: {user.user_id}</h3> <br /><br />     \r\n          <h3 className=\"userInfo\">username: {user.username}</h3><br /><br />\r\n          <h3 className=\"userInfo\">Liked songs: </h3>\r\n\r\n        </div>\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n        <button className=\"friendButton\" onClick={toFriend}>Friends</button><br/><br/>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Friend_info_artist;",{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":5,"column":27,"nodeType":"274","messageId":"275","endLine":5,"endColumn":36},{"ruleId":"272","severity":1,"message":"276","line":19,"column":13,"nodeType":"274","messageId":"275","endLine":19,"endColumn":21},{"ruleId":"272","severity":1,"message":"277","line":19,"column":23,"nodeType":"274","messageId":"275","endLine":19,"endColumn":29},{"ruleId":"272","severity":1,"message":"278","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":14},{"ruleId":"279","severity":1,"message":"280","line":37,"column":13,"nodeType":"281","endLine":37,"endColumn":52},{"ruleId":"272","severity":1,"message":"278","line":6,"column":10,"nodeType":"274","messageId":"275","endLine":6,"endColumn":14},{"ruleId":"272","severity":1,"message":"282","line":10,"column":10,"nodeType":"274","messageId":"275","endLine":10,"endColumn":12},{"ruleId":"272","severity":1,"message":"283","line":63,"column":9,"nodeType":"274","messageId":"275","endLine":63,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":73,"column":9,"nodeType":"281","endLine":73,"endColumn":48},{"ruleId":"272","severity":1,"message":"278","line":7,"column":10,"nodeType":"274","messageId":"275","endLine":7,"endColumn":14},{"ruleId":"279","severity":1,"message":"280","line":45,"column":13,"nodeType":"281","endLine":45,"endColumn":51},{"ruleId":"268","replacedBy":"284"},{"ruleId":"270","replacedBy":"285"},{"ruleId":"272","severity":1,"message":"276","line":40,"column":13,"nodeType":"274","messageId":"275","endLine":40,"endColumn":21},{"ruleId":"272","severity":1,"message":"277","line":40,"column":23,"nodeType":"274","messageId":"275","endLine":40,"endColumn":29},{"ruleId":"286","severity":1,"message":"287","line":56,"column":15,"nodeType":"281","messageId":"288","endLine":56,"endColumn":28},{"ruleId":"286","severity":1,"message":"289","line":59,"column":15,"nodeType":"281","messageId":"288","endLine":59,"endColumn":31},{"ruleId":"286","severity":1,"message":"290","line":62,"column":15,"nodeType":"281","messageId":"288","endLine":62,"endColumn":30},{"ruleId":"286","severity":1,"message":"291","line":107,"column":15,"nodeType":"281","messageId":"288","endLine":107,"endColumn":30},{"ruleId":"286","severity":1,"message":"292","line":110,"column":15,"nodeType":"281","messageId":"288","endLine":110,"endColumn":28},{"ruleId":"286","severity":1,"message":"293","line":113,"column":15,"nodeType":"281","messageId":"288","endLine":113,"endColumn":35},{"ruleId":"272","severity":1,"message":"294","line":16,"column":10,"nodeType":"274","messageId":"275","endLine":16,"endColumn":21},{"ruleId":"272","severity":1,"message":"295","line":16,"column":23,"nodeType":"274","messageId":"275","endLine":16,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":38,"column":11,"nodeType":"274","messageId":"298","endLine":38,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":73,"column":13,"nodeType":"281","endLine":73,"endColumn":51},{"ruleId":"272","severity":1,"message":"299","line":10,"column":7,"nodeType":"274","messageId":"275","endLine":10,"endColumn":10},{"ruleId":"272","severity":1,"message":"300","line":15,"column":10,"nodeType":"274","messageId":"275","endLine":15,"endColumn":17},{"ruleId":"272","severity":1,"message":"301","line":15,"column":19,"nodeType":"274","messageId":"275","endLine":15,"endColumn":29},{"ruleId":"279","severity":1,"message":"280","line":98,"column":13,"nodeType":"281","endLine":98,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":7,"column":7,"nodeType":"274","messageId":"275","endLine":7,"endColumn":10},{"ruleId":"272","severity":1,"message":"282","line":11,"column":10,"nodeType":"274","messageId":"275","endLine":11,"endColumn":12},{"ruleId":"272","severity":1,"message":"283","line":64,"column":9,"nodeType":"274","messageId":"275","endLine":64,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":74,"column":9,"nodeType":"281","endLine":74,"endColumn":48},{"ruleId":"272","severity":1,"message":"300","line":13,"column":10,"nodeType":"274","messageId":"275","endLine":13,"endColumn":17},{"ruleId":"302","severity":1,"message":"303","line":21,"column":17,"nodeType":"304","messageId":"305","endLine":21,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":46,"column":7,"nodeType":"308","endLine":46,"endColumn":9,"suggestions":"309"},{"ruleId":"279","severity":1,"message":"280","line":80,"column":13,"nodeType":"281","endLine":80,"endColumn":52},{"ruleId":"272","severity":1,"message":"300","line":13,"column":10,"nodeType":"274","messageId":"275","endLine":13,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":82,"column":13,"nodeType":"281","endLine":82,"endColumn":52},{"ruleId":"272","severity":1,"message":"310","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":18},{"ruleId":"272","severity":1,"message":"311","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":13},{"ruleId":"272","severity":1,"message":"312","line":57,"column":7,"nodeType":"274","messageId":"275","endLine":57,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":67,"column":13,"nodeType":"281","endLine":67,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":8,"column":7,"nodeType":"274","messageId":"275","endLine":8,"endColumn":10},{"ruleId":"306","severity":1,"message":"313","line":20,"column":3,"nodeType":"314","endLine":20,"endColumn":18,"suggestions":"315"},{"ruleId":"279","severity":1,"message":"280","line":58,"column":13,"nodeType":"281","endLine":58,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":8,"column":7,"nodeType":"274","messageId":"275","endLine":8,"endColumn":10},{"ruleId":"306","severity":1,"message":"313","line":20,"column":3,"nodeType":"314","endLine":20,"endColumn":18,"suggestions":"316"},{"ruleId":"279","severity":1,"message":"280","line":58,"column":13,"nodeType":"281","endLine":58,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":8,"column":7,"nodeType":"274","messageId":"275","endLine":8,"endColumn":10},{"ruleId":"306","severity":1,"message":"313","line":20,"column":3,"nodeType":"314","endLine":20,"endColumn":18,"suggestions":"317"},{"ruleId":"279","severity":1,"message":"280","line":58,"column":13,"nodeType":"281","endLine":58,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":8,"column":7,"nodeType":"274","messageId":"275","endLine":8,"endColumn":10},{"ruleId":"272","severity":1,"message":"318","line":12,"column":10,"nodeType":"274","messageId":"275","endLine":12,"endColumn":18},{"ruleId":"272","severity":1,"message":"319","line":12,"column":20,"nodeType":"274","messageId":"275","endLine":12,"endColumn":31},{"ruleId":"279","severity":1,"message":"280","line":73,"column":13,"nodeType":"281","endLine":73,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":8,"column":7,"nodeType":"274","messageId":"275","endLine":8,"endColumn":10},{"ruleId":"306","severity":1,"message":"313","line":20,"column":3,"nodeType":"314","endLine":20,"endColumn":18,"suggestions":"320"},{"ruleId":"279","severity":1,"message":"280","line":58,"column":13,"nodeType":"281","endLine":58,"endColumn":52},{"ruleId":"272","severity":1,"message":"300","line":17,"column":10,"nodeType":"274","messageId":"275","endLine":17,"endColumn":17},{"ruleId":"302","severity":1,"message":"303","line":24,"column":17,"nodeType":"304","messageId":"305","endLine":24,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":42,"column":7,"nodeType":"308","endLine":42,"endColumn":9,"suggestions":"321"},{"ruleId":"272","severity":1,"message":"322","line":85,"column":9,"nodeType":"274","messageId":"275","endLine":85,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":95,"column":13,"nodeType":"281","endLine":95,"endColumn":52},{"ruleId":"272","severity":1,"message":"300","line":17,"column":10,"nodeType":"274","messageId":"275","endLine":17,"endColumn":17},{"ruleId":"272","severity":1,"message":"323","line":24,"column":11,"nodeType":"274","messageId":"275","endLine":24,"endColumn":19},{"ruleId":"272","severity":1,"message":"322","line":85,"column":9,"nodeType":"274","messageId":"275","endLine":85,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":95,"column":13,"nodeType":"281","endLine":95,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":10,"column":7,"nodeType":"274","messageId":"275","endLine":10,"endColumn":10},{"ruleId":"272","severity":1,"message":"300","line":18,"column":10,"nodeType":"274","messageId":"275","endLine":18,"endColumn":17},{"ruleId":"272","severity":1,"message":"301","line":18,"column":19,"nodeType":"274","messageId":"275","endLine":18,"endColumn":29},{"ruleId":"272","severity":1,"message":"324","line":79,"column":9,"nodeType":"274","messageId":"275","endLine":79,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":94,"column":13,"nodeType":"281","endLine":94,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":10,"column":7,"nodeType":"274","messageId":"275","endLine":10,"endColumn":10},{"ruleId":"272","severity":1,"message":"325","line":16,"column":10,"nodeType":"274","messageId":"275","endLine":16,"endColumn":18},{"ruleId":"272","severity":1,"message":"326","line":16,"column":20,"nodeType":"274","messageId":"275","endLine":16,"endColumn":31},{"ruleId":"272","severity":1,"message":"300","line":17,"column":10,"nodeType":"274","messageId":"275","endLine":17,"endColumn":17},{"ruleId":"272","severity":1,"message":"327","line":68,"column":9,"nodeType":"274","messageId":"275","endLine":68,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":90,"column":13,"nodeType":"281","endLine":90,"endColumn":52},{"ruleId":"272","severity":1,"message":"300","line":14,"column":10,"nodeType":"274","messageId":"275","endLine":14,"endColumn":17},{"ruleId":"272","severity":1,"message":"325","line":17,"column":10,"nodeType":"274","messageId":"275","endLine":17,"endColumn":18},{"ruleId":"272","severity":1,"message":"328","line":19,"column":15,"nodeType":"274","messageId":"275","endLine":19,"endColumn":23},{"ruleId":"272","severity":1,"message":"323","line":25,"column":11,"nodeType":"274","messageId":"275","endLine":25,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":105,"column":13,"nodeType":"281","endLine":105,"endColumn":52},{"ruleId":"272","severity":1,"message":"299","line":10,"column":7,"nodeType":"274","messageId":"275","endLine":10,"endColumn":10},{"ruleId":"272","severity":1,"message":"325","line":14,"column":10,"nodeType":"274","messageId":"275","endLine":14,"endColumn":18},{"ruleId":"279","severity":1,"message":"280","line":86,"column":13,"nodeType":"281","endLine":86,"endColumn":52},{"ruleId":"272","severity":1,"message":"329","line":13,"column":10,"nodeType":"274","messageId":"275","endLine":13,"endColumn":17},{"ruleId":"272","severity":1,"message":"330","line":13,"column":19,"nodeType":"274","messageId":"275","endLine":13,"endColumn":29},{"ruleId":"306","severity":1,"message":"331","line":21,"column":3,"nodeType":"314","endLine":21,"endColumn":18,"suggestions":"332"},{"ruleId":"279","severity":1,"message":"280","line":77,"column":13,"nodeType":"281","endLine":77,"endColumn":52},{"ruleId":"302","severity":1,"message":"303","line":26,"column":17,"nodeType":"304","messageId":"305","endLine":26,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":57,"column":7,"nodeType":"308","endLine":57,"endColumn":9,"suggestions":"333"},{"ruleId":"279","severity":1,"message":"280","line":135,"column":13,"nodeType":"281","endLine":135,"endColumn":52},{"ruleId":"272","severity":1,"message":"323","line":26,"column":11,"nodeType":"274","messageId":"275","endLine":26,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":136,"column":13,"nodeType":"281","endLine":136,"endColumn":52},{"ruleId":"334","severity":2,"message":"335","line":13,"column":27,"nodeType":"274","endLine":13,"endColumn":35},{"ruleId":"334","severity":2,"message":"336","line":14,"column":17,"nodeType":"274","endLine":14,"endColumn":27},{"ruleId":"334","severity":2,"message":"337","line":16,"column":3,"nodeType":"314","endLine":16,"endColumn":18},{"ruleId":"279","severity":1,"message":"280","line":83,"column":13,"nodeType":"281","endLine":83,"endColumn":52},{"ruleId":"272","severity":1,"message":"338","line":53,"column":9,"nodeType":"274","messageId":"275","endLine":53,"endColumn":17},{"ruleId":"272","severity":1,"message":"339","line":57,"column":9,"nodeType":"274","messageId":"275","endLine":57,"endColumn":14},{"ruleId":"272","severity":1,"message":"340","line":61,"column":9,"nodeType":"274","messageId":"275","endLine":61,"endColumn":18},{"ruleId":"272","severity":1,"message":"341","line":65,"column":9,"nodeType":"274","messageId":"275","endLine":65,"endColumn":16},{"ruleId":"272","severity":1,"message":"324","line":69,"column":9,"nodeType":"274","messageId":"275","endLine":69,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":83,"column":13,"nodeType":"281","endLine":83,"endColumn":52},{"ruleId":"272","severity":1,"message":"338","line":51,"column":9,"nodeType":"274","messageId":"275","endLine":51,"endColumn":17},{"ruleId":"272","severity":1,"message":"339","line":55,"column":9,"nodeType":"274","messageId":"275","endLine":55,"endColumn":14},{"ruleId":"272","severity":1,"message":"340","line":59,"column":9,"nodeType":"274","messageId":"275","endLine":59,"endColumn":18},{"ruleId":"272","severity":1,"message":"341","line":63,"column":9,"nodeType":"274","messageId":"275","endLine":63,"endColumn":16},{"ruleId":"272","severity":1,"message":"324","line":67,"column":9,"nodeType":"274","messageId":"275","endLine":67,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":81,"column":13,"nodeType":"281","endLine":81,"endColumn":52},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'loaded' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'getUsers' is assigned a value but never used.",["342"],["343"],"react/jsx-pascal-case","Imported JSX component Home_artist must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Profile_artist must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Search_artist must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Friend_artist must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Friend_info must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Friend_info_artist must be in PascalCase or SCREAMING_SNAKE_CASE","'artist_name' is assigned a value but never used.","'setArtist_name' is assigned a value but never used.","no-redeclare","'response' is already defined.","redeclared","'jwt' is assigned a value but never used.","'user_id' is assigned a value but never used.","'setUser_id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["344"],"'useState' is defined but never used.","'Axios' is defined but never used.","'editEmail' is assigned a value but never used.","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["345"],["346"],["347"],"'userList' is assigned a value but never used.","'setUserList' is assigned a value but never used.",["348"],["349"],"'changeSong' is assigned a value but never used.","'isArtist' is assigned a value but never used.","'toArtist' is assigned a value but never used.","'album_id' is assigned a value but never used.","'setAlbum_id' is assigned a value but never used.","'toCreateSong' is assigned a value but never used.","'setIndex' is assigned a value but never used.","'song_id' is assigned a value but never used.","'setSong_id' is assigned a value but never used.","React Hook useEffect contains a call to 'setAlbum_id'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["350"],["351"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"friend_info\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useHistory\" is called in function \"friend_info\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"React.useEffect\" is called in function \"friend_info\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'toGender' is assigned a value but never used.","'toAge' is assigned a value but never used.","'toCountry' is assigned a value but never used.","'toPhone' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},{"desc":"354","fix":"357"},{"desc":"354","fix":"358"},{"desc":"352","fix":"359"},{"desc":"354","fix":"360"},{"desc":"352","fix":"361"},"Update the dependencies array to be: [history]",{"range":"362","text":"363"},"Add dependencies array: []",{"range":"364","text":"365"},{"range":"366","text":"365"},{"range":"367","text":"365"},{"range":"368","text":"365"},{"range":"369","text":"363"},{"range":"370","text":"365"},{"range":"371","text":"363"},[1336,1338],"[history]",[703,703],", []",[699,699],[695,695],[687,687],[1264,1266],[837,837],[1690,1692]]