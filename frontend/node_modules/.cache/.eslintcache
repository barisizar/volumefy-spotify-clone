[{"C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\index.js":"1","C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\App.js":"2","C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\Home.js":"3","C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\Login.js":"4","C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\Main.js":"5","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js":"6","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js":"7","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js":"8","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js":"9","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js":"10","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js":"11","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js":"12","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js":"13","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Main.js":"14","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js":"15"},{"size":220,"mtime":1622566760000,"results":"16","hashOfConfig":"17"},{"size":1072,"mtime":1623670777000,"results":"18","hashOfConfig":"17"},{"size":2620,"mtime":1623688629369,"results":"19","hashOfConfig":"17"},{"size":1746,"mtime":1623700319540,"results":"20","hashOfConfig":"17"},{"size":506,"mtime":1623688672908,"results":"21","hashOfConfig":"17"},{"size":220,"mtime":1622566760000,"results":"22","hashOfConfig":"23"},{"size":902,"mtime":1624187834738,"results":"24","hashOfConfig":"23"},{"size":1898,"mtime":1624209009008,"results":"25","hashOfConfig":"23"},{"size":2764,"mtime":1624188446042,"results":"26","hashOfConfig":"23"},{"size":1940,"mtime":1624186766468,"results":"27","hashOfConfig":"23"},{"size":220,"mtime":1622566760000,"results":"28","hashOfConfig":"29"},{"size":902,"mtime":1624187834738,"results":"30","hashOfConfig":"29"},{"size":1940,"mtime":1624186766468,"results":"31","hashOfConfig":"29"},{"size":1898,"mtime":1624209009008,"results":"32","hashOfConfig":"29"},{"size":2764,"mtime":1624188446042,"results":"33","hashOfConfig":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"z20v5v",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1v75x9b",{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b5vr4y",{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\index.js",[],["74","75"],"C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\App.js",["76"],"import './App.css';\nimport Home from \"./Home\"\nimport Login from \"./Login\"\nimport Main from \"./Main\"\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n// MAIN APP\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n      loggedIn: false\n    }\n  }\n  render() {\n  const { loggedIn, loaded } = this.state;\n  if (!loggedIn){\n    return (\n       <Router>\n      <div className=\"App\">\n        {/* Routes */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home></Home>\n          </Route>\n          <Route exact path=\"/Login\">\n            <Login></Login>\n          </Route>\n          <Route exact path=\"/Main\">\n            <Main></Main>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    );\n  }\n  return (\n    <Router>\n      <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/\">\n            <Main></Main>\n          </Route>\n      </Switch>\n      </div>\n      \n    </Router>\n  )\n\n}\n\n}\nexport default App;\n","C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\Home.js",["77","78","79","80"],"import \"./home.css\";\r\nimport volumefy from \"./volumefy.png\";\r\nimport React,{ useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// HOME (INDEX) PAGE\r\nconst Home = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userlist, setUserList] = useState([]);\r\n\r\n  // Defining history. It'll be used while routing \r\n  // between pages.\r\n  let history = useHistory();\r\n\r\n  // This method is to add users to the database.\r\n  const addUser = (event) => {\r\n    var id =  null;\r\n    setId(id);\r\n    // If there's any null element, don't load the new\r\n    // page nor add the element to the table.\r\n    if(!username || !email || !password){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/create\", {\r\n        id: id,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }).then(() => {\r\n        setUserList([\r\n          ...userlist,\r\n          {\r\n            id: id,\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n          },\r\n        ]);\r\n      });\r\n      history.push(\"/main\");\r\n    }\r\n  };\r\n\r\n  // This method is to route to the login page.\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  // This method is to get the elements from the database.\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {/* Name and logo */}\r\n      <div>\r\n        <img src={volumefy} className=\"logo\" />\r\n        <h1 className=\"h1text\"> VOLUMEFY</h1>\r\n        <hr />\r\n      </div>\r\n      {/* Inputs */}\r\n      <h2>Email Address</h2>\r\n      <input className=\"input\" type=\"email\" onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}/>\r\n      <h2>User Name</h2>\r\n      <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}/>\r\n      <h2>Password</h2>\r\n      <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}/>\r\n      <br />\r\n      <br />\r\n      <button onClick={addUser}>SIGN UP</button>\r\n      {/* Direct to the login page */}\r\n      <h2>Already have an account?</h2>\r\n      <button onClick={login}>SIGN IN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\Login.js",["81","82"],"// Importing the necessary libraries.\r\nimport './login.css';\r\nimport volumefy from \"./volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// LOGIN PAGE\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // This method post a request to the /login, which will\r\n  // activate the loginUser function inside the controller.\r\n  // That method will return a code and on success, it'll be 200.\r\n  // In that case, it'll be directed to the \"/main\".\r\n  const logUser = (e) => {\r\n    var status;\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      status = response.data.code;\r\n      if(status === 200){\r\n        history.push(\"/main\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      {/* Name and logo */}\r\n        <div>\r\n            <img src={volumefy} className=\"logo\"/>\r\n            <h1 className=\"h1text\"> VOLUMEFY</h1><hr/>\r\n        </div>\r\n        {/* Inputs */}\r\n        <h2>Welcome back!</h2>\r\n        {/* Get the username */}\r\n        <h2>User Name</h2>\r\n        <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n        }}/>\r\n        {/* Get the password */}\r\n        <h2>Password</h2>\r\n        <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n        }} /><br/><br/>\r\n        {/* Login */}\r\n        <button onClick={logUser}>SIGN IN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\kirca\\Desktop\\volumify\\volumify\\frontend\\src\\Main.js",["83"],"// This is the page where the user is directed after logging in.\n\nimport './main.css';\nimport volumefy from \"./volumefy.png\";\nimport { Link } from \"react-router-dom\";\n\nconst Main = () => {\n  return (\n    <div className=\"Main\">\n      {/* Name and logo */}\n        <div>\n            <img src={volumefy} className=\"logo\"/>\n            <h1> VOLUMEFY</h1><hr/>\n        </div>\n        <h2>Welcome to Volumefy</h2><br/>\n        <button><Link to=\"/\">SIGN Out</Link></button>\n    </div>\n  );\n}\n\nexport default Main;","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js",[],["84","85"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js",["86","87","88"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js",["89","90"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js",["91","92","93","94"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js",["95","96"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js",["97","98","99"],"import './App.css';\nimport Home from \"./Home\"\nimport Login from \"./Login\"\nimport Main from \"./Main\"\nimport React, {Component, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n// MAIN APP\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n      loggedIn: false\n    }\n  }\n\n  render() {\n    const { loggedIn, loaded } = this.state;\n      return (\n        <Router>\n        <div className=\"App\">\n          {/* Routes */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home></Home>\n            </Route>\n            <Route exact path=\"/Login\">\n              <Login></Login>\n            </Route>\n            <Route exact path=\"/Main\">\n              <Main></Main>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      );\n    }\n}\nexport default App;\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js",["100","101"],"// Importing the necessary libraries.\r\nimport './login.css';\r\nimport volumefy from \"./volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// LOGIN PAGE\r\nconst Login = () => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/main\");\r\n    };\r\n  })\r\n\r\n  // This method post a request to the /login, which will\r\n  // activate the loginUser function inside the controller.\r\n  // That method will return a code and on success, it'll be 200.\r\n  // In that case, it'll be directed to the \"/main\".\r\n  const logUser = (e) => {\r\n    var status;\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      status = response.data.code;\r\n      localStorage.setItem(\"response\", response.data.accessToken);\r\n      if(status === 200){\r\n        history.push(\"/main\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"test\" className=\"Login\">\r\n      {/* Name and logo */}\r\n        <div>\r\n            <img src={volumefy} className=\"logo\"/>\r\n            <h1 className=\"h1text\"> VOLUMEFY</h1><hr/>\r\n        </div>\r\n        {/* Inputs */}\r\n        <h2>Welcome back!</h2>\r\n        {/* Get the username */}\r\n        <h2>User Name</h2>\r\n        <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n        }}/>\r\n        {/* Get the password */}\r\n        <h2>Password</h2>\r\n        <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n        }} /><br/><br/>\r\n        {/* Login */}\r\n        <button onClick={logUser}>SIGN IN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Main.js",["102","103"],"// This is the page where the user is directed after logging in.\nimport './main.css';\nimport volumefy from \"./volumefy.png\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst jwt = require('jsonwebtoken');\n\nconst Main = () => {\n  \n  let history = useHistory();\n\n  // On load, get the token from the local storage and get\n  // the usarname from it. Then, create a h2 element with\n  // that usarname.\n  React.useEffect(() => {\n    var response = localStorage.getItem(\"response\");\n    console.log(response);\n    response = jwt.decode(response);\n    response = response.username;\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\n  })\n\n  // This method is to delete the access token from the local storage\n  // and route back to the \"/\".\n  const logOut = () => {\n    localStorage.clear();\n    history.push(\"/\");\n  };\n\n  return (\n    <body class=\"bMain\">\n    <div className=\"Main\" >\n      {/* Name and logo */}\n        <div id = \"header\" className = \"header\">\n            <img src={volumefy} className=\"logo2\"/>\n            <h1 className=\"vol\"> VOLUMEFY</h1>\n            <div id = \"upper\" className = \"upper\"></div>\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\n            <hr/>\n        </div>\n        <div id = \"left\" className = \"left\">\n          <br />\n          <button className=\"leftButton\">Profile</button><br/><br/>\n          <button className=\"leftButton\">Search</button><br/><br/>\n          <button className=\"leftButton\">Library</button>\n        </div>\n        <div id = \"middle\" className = \"middle\">\n          <h1>SONGS</h1>\n        </div>\n        <div id = \"right\" className = \"right\">\n          <h2>Friends</h2>\n        </div>\n        \n    </div>\n    </body>\n  );\n}\n\nexport default Main;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js",["104","105","106","107"],"import \"./home.css\";\r\nimport volumefy from \"./volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// HOME (INDEX) PAGE\r\nconst Home = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userlist, setUserList] = useState([]);\r\n\r\n  // Defining history. It'll be used while routing \r\n  // between pages.\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/main\");\r\n    };\r\n  })\r\n\r\n  // This method is to add users to the database.\r\n  const addUser = (event) => {\r\n    var id =  null;\r\n    setId(id);\r\n    // If there's any null element, don't load the new\r\n    // page nor add the element to the table.\r\n    if(!username || !email || !password){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/create\", {\r\n        id: id,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }).then(() => {\r\n        setUserList([\r\n          ...userlist,\r\n          {\r\n            id: id,\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n          },\r\n        ]);\r\n      });\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  // This method is to route to the login page.\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  // This method is to get the elements from the database.\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {/* Name and logo */}\r\n      <div>\r\n        <img src={volumefy} className=\"logo\" />\r\n        <h1 className=\"h1text\"> VOLUMEFY</h1>\r\n        <hr />\r\n      </div>\r\n      {/* Inputs */}\r\n      <h2>Email Address</h2>\r\n      <input className=\"input\" type=\"email\" onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}/>\r\n      <h2>User Name</h2>\r\n      <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}/>\r\n      <h2>Password</h2>\r\n      <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}/>\r\n      <br />\r\n      <br />\r\n      <button onClick={addUser}>SIGN UP</button>\r\n      {/* Direct to the login page */}\r\n      <h2>Already have an account?</h2>\r\n      <button onClick={login}>SIGN IN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":18,"column":21,"nodeType":"114","messageId":"115","endLine":18,"endColumn":27},{"ruleId":"112","severity":1,"message":"116","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"117","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":12},{"ruleId":"112","severity":1,"message":"118","line":56,"column":9,"nodeType":"114","messageId":"115","endLine":56,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":66,"column":9,"nodeType":"121","endLine":66,"endColumn":48},{"ruleId":"112","severity":1,"message":"116","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":37,"column":13,"nodeType":"121","endLine":37,"endColumn":51},{"ruleId":"119","severity":1,"message":"120","line":12,"column":13,"nodeType":"121","endLine":12,"endColumn":51},{"ruleId":"108","replacedBy":"122"},{"ruleId":"110","replacedBy":"123"},{"ruleId":"112","severity":1,"message":"124","line":5,"column":27,"nodeType":"114","messageId":"115","endLine":5,"endColumn":36},{"ruleId":"112","severity":1,"message":"125","line":19,"column":13,"nodeType":"114","messageId":"115","endLine":19,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":19,"column":23,"nodeType":"114","messageId":"115","endLine":19,"endColumn":29},{"ruleId":"112","severity":1,"message":"116","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":37,"column":13,"nodeType":"121","endLine":37,"endColumn":52},{"ruleId":"112","severity":1,"message":"116","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"117","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":12},{"ruleId":"112","severity":1,"message":"118","line":63,"column":9,"nodeType":"114","messageId":"115","endLine":63,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":73,"column":9,"nodeType":"121","endLine":73,"endColumn":48},{"ruleId":"112","severity":1,"message":"116","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":45,"column":13,"nodeType":"121","endLine":45,"endColumn":51},{"ruleId":"112","severity":1,"message":"124","line":5,"column":27,"nodeType":"114","messageId":"115","endLine":5,"endColumn":36},{"ruleId":"112","severity":1,"message":"125","line":19,"column":13,"nodeType":"114","messageId":"115","endLine":19,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":19,"column":23,"nodeType":"114","messageId":"115","endLine":19,"endColumn":29},{"ruleId":"112","severity":1,"message":"116","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":45,"column":13,"nodeType":"121","endLine":45,"endColumn":51},{"ruleId":"112","severity":1,"message":"116","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":37,"column":13,"nodeType":"121","endLine":37,"endColumn":52},{"ruleId":"112","severity":1,"message":"116","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"117","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":12},{"ruleId":"112","severity":1,"message":"118","line":63,"column":9,"nodeType":"114","messageId":"115","endLine":63,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":73,"column":9,"nodeType":"121","endLine":73,"endColumn":48},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'loaded' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'id' is assigned a value but never used.","'getUsers' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["126"],["127"],"'useEffect' is defined but never used.","'loggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]