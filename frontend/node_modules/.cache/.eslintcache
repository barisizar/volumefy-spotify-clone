[{"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js":"1","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js":"2","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js":"3","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js":"4","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js":"5","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js":"6","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js":"7","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js":"8","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js":"9","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js":"10","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js":"11","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js":"12","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js":"13","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js":"14","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js":"15","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js":"16","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js":"17","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js":"18","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js":"19","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js":"20","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search_artist.js":"21","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile_artist.js":"22","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyMusic.js":"23","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyUpload.js":"24","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateAlbumSingle.js":"25","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateSong.js":"26"},{"size":220,"mtime":1622566760000,"results":"27","hashOfConfig":"28"},{"size":902,"mtime":1624187834738,"results":"29","hashOfConfig":"28"},{"size":1898,"mtime":1624209009008,"results":"30","hashOfConfig":"28"},{"size":2764,"mtime":1624188446042,"results":"31","hashOfConfig":"28"},{"size":1940,"mtime":1624186766468,"results":"32","hashOfConfig":"28"},{"size":227,"mtime":1624275278394,"results":"33","hashOfConfig":"34"},{"size":3270,"mtime":1624661112524,"results":"35","hashOfConfig":"34"},{"size":1984,"mtime":1624723382535,"results":"36","hashOfConfig":"34"},{"size":5106,"mtime":1624702780622,"results":"37","hashOfConfig":"34"},{"size":2872,"mtime":1624723340386,"results":"38","hashOfConfig":"34"},{"size":3372,"mtime":1624648918776,"results":"39","hashOfConfig":"34"},{"size":2652,"mtime":1624648384177,"results":"40","hashOfConfig":"34"},{"size":0,"mtime":1624383057886,"results":"41","hashOfConfig":"34"},{"size":2825,"mtime":1624484593042,"results":"42","hashOfConfig":"34"},{"size":3493,"mtime":1624660010924,"results":"43","hashOfConfig":"34"},{"size":3480,"mtime":1624659812671,"results":"44","hashOfConfig":"34"},{"size":3478,"mtime":1624660027976,"results":"45","hashOfConfig":"34"},{"size":4031,"mtime":1624662122927,"results":"46","hashOfConfig":"34"},{"size":3277,"mtime":1624659965416,"results":"47","hashOfConfig":"34"},{"size":3579,"mtime":1624742697836,"results":"48","hashOfConfig":"34"},{"size":4226,"mtime":1624805326193,"results":"49","hashOfConfig":"34"},{"size":5144,"mtime":1624702817305,"results":"50","hashOfConfig":"34"},{"size":3900,"mtime":1624796547632,"results":"51","hashOfConfig":"34"},{"size":2664,"mtime":1624661181027,"results":"52","hashOfConfig":"34"},{"size":4625,"mtime":1624735675583,"results":"53","hashOfConfig":"34"},{"size":4260,"mtime":1624735735418,"results":"54","hashOfConfig":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1v75x9b",{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"b5vr4y",{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js",[],["126","127"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js",["128","129","130"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js",["131","132"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js",["133","134","135","136"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js",["137","138"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js",[],["139","140"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js",["141","142","143","144","145"],"// This is the main app handling the route switches.\r\n\r\nimport './styles/App.css';\r\nimport Signup from \"./Signup\"\r\nimport Login from \"./Login\"\r\nimport Home from \"./Home\"\r\nimport Search from \"./Search\"\r\nimport Home_artist from \"./Home_artist\"\r\nimport Profile_artist from './Profile_artist';\r\nimport Search_artist from './Search_artist';\r\nimport Profile from \"./Profile\"\r\nimport MyMusic from './MyMusic';\r\nimport MyUpload from './MyUpload';\r\nimport CreateAlbumSingle from './CreateAlbumSingle';\r\nimport CreateSong from './CreateSong';\r\nimport Username from \"./edits/Username\"\r\nimport Email from \"./edits/Email\"\r\nimport Gender from \"./edits/Gender\"\r\nimport Age from \"./edits/Age\"\r\nimport Artist from \"./edits/Artist\"\r\nimport Country from \"./edits/Country\"\r\nimport Phone from \"./edits/Phone\"\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      loggedIn: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n      return (\r\n        <Router>\r\n        <div className=\"App\">\r\n          {/* Routes */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Signup></Signup>\r\n            </Route>\r\n            <Route exact path=\"/Login\">\r\n              <Login></Login>\r\n            </Route>\r\n            <Route exact path=\"/Home\">\r\n              <Home></Home>\r\n            </Route>\r\n            <Route exact path=\"/Home_artist\">\r\n              <Home_artist></Home_artist>\r\n            </Route>\r\n            <Route exact path=\"/Profile_artist\">\r\n              <Profile_artist></Profile_artist>\r\n            </Route>\r\n            <Route exact path=\"/Search_artist\">\r\n              <Search_artist></Search_artist>\r\n            </Route>\r\n            <Route exact path=\"/Username\">\r\n              <Username></Username>\r\n            </Route>\r\n            <Route exact path=\"/Email\">\r\n              <Email></Email>\r\n            </Route>\r\n            <Route exact path=\"/Gender\">\r\n              <Gender></Gender>\r\n            </Route>\r\n            <Route exact path=\"/Age\">\r\n              <Age></Age>\r\n            </Route>\r\n            <Route exact path=\"/Artist\">\r\n              <Artist></Artist>\r\n            </Route>\r\n            <Route exact path=\"/Country\">\r\n              <Country></Country>\r\n            </Route>\r\n            <Route exact path=\"/Phone\">\r\n              <Phone></Phone>\r\n            </Route>\r\n            <Route exact path=\"/Profile\">\r\n              <Profile></Profile>\r\n            </Route>\r\n            <Route exact path=\"/Search\">\r\n              <Search></Search>\r\n            </Route>\r\n            <Route exact path=\"/MyMusic\">\r\n              <MyMusic></MyMusic>\r\n            </Route>\r\n            <Route exact path=\"/MyUpload\">\r\n              <MyUpload></MyUpload>\r\n            </Route>\r\n            <Route exact path=\"/CreateAlbumSingle\">\r\n              <CreateAlbumSingle></CreateAlbumSingle>\r\n            </Route>\r\n            <Route exact path=\"/CreateSong\">\r\n              <CreateSong></CreateSong>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js",["146","147"],"// Importing the necessary libraries.\r\nimport './styles/login.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// LOGIN PAGE\r\nconst Login = () => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method post a request to the /login, which will\r\n  // activate the loginUser function inside the controller.\r\n  // That method will return a code and on success, it'll be 200.\r\n  // In that case, it'll be directed to the \"/main\".\r\n  const logUser = (e) => {\r\n    var status;\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      console.log(response);\r\n      status = response.data.code;\r\n      localStorage.setItem(\"response\", response.data.accessToken);\r\n      if(status === 200){\r\n        history.push(\"/home\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"test\" className=\"Login\">\r\n      {/* Name and logo */}\r\n        <div>\r\n            <img src={volumefy} className=\"logo\"/>\r\n            <h1 className=\"h1text\"> VOLUMEFY</h1><hr/>\r\n        </div>\r\n        {/* Inputs */}\r\n        <h2>Welcome back!</h2>\r\n        {/* Get the username */}\r\n        <h2>User Name</h2>\r\n        <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n        }}/>\r\n        {/* Get the password */}\r\n        <h2>Password</h2>\r\n        <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n        }} /><br/><br/>\r\n        {/* Login */}\r\n        <button onClick={logUser}>SIGN IN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js",["148","149","150","151","152","153","154"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Profile = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n  \r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data)\r\n     })\r\n\r\n     console.log(\"userList\",userList);\r\n    \r\n    // Map around the database and find the user with the relevant id.\r\n    userList.map((val, key) => {\r\n      var response = localStorage.getItem(\"response\");\r\n      response = jwt.decode(response);\r\n      response = response.id;\r\n      // If the id of the user is equal to the response, show user's\r\n      // info in the div \"middle\".\r\n      if(val.id == response){\r\n        console.log(val.id);\r\n        if(val.artist == 1){\r\n          history.push(\"/Profile_artist\");\r\n        }\r\n    }})\r\n  },[])\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\")\r\n  }\r\n\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {/* Profile info */}\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle_h\"> \r\n            <h3 className=\"userInfo\">username: {val.username}</h3>       <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">email: {val.email}</h3>             <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">gender: {val.gender}</h3>           <button className=\"editButton\" onClick={toGender}>edit</button><br/>\r\n            <h3 className=\"userInfo\">age: {val.age}</h3>                 <button className=\"editButton\" onClick={toAge}>edit</button><br/>\r\n            <h3 className=\"userInfo\">country: {val.country}</h3>         <button className=\"editButton\" onClick={toCountry}>edit</button><br/>\r\n            <h3 className=\"userInfo\">phone number: {val.phone}</h3>      <button className=\"editButton\" onClick={toPhone}>edit</button><br/>\r\n            <h3 className=\"userInfo\">Want to be an artist?</h3>          <button className=\"artistButton\" onClick={toArtist}>BECOME ONE!</button><br/>\r\n          </div>\r\n        }})}\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js",["155","156","157","158","159","160"],"import \"./styles/signup.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\n// HOME (INDEX) PAGE\r\nconst Signup = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userlist, setUserList] = useState([]);\r\n\r\n  // Defining history. It'll be used while routing \r\n  // between pages.\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method is to add users to the database.\r\n  const addUser = (event) => {\r\n    var id =  null;\r\n    setId(id);\r\n    // If there's any null element, don't load the new\r\n    // page nor add the element to the table.\r\n    if(!username || !email || !password){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/create\", {\r\n        id: id,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }).then(() => {\r\n        setUserList([\r\n          ...userlist,\r\n          {\r\n            id: id,\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n          },\r\n        ]);\r\n      });\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  // This method is to route to the login page.\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  // This method is to get the elements from the database.\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {/* Name and logo */}\r\n      <div>\r\n        <img src={volumefy} className=\"logo\" />\r\n        <h1 className=\"h1text\"> VOLUMEFY</h1>\r\n        <hr />\r\n      </div>\r\n      {/* Inputs */}\r\n      <h2>Email Address</h2>\r\n      <input className=\"input\" type=\"email\" onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}/>\r\n      <h2>User Name</h2>\r\n      <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}/>\r\n      <h2>Password</h2>\r\n      <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}/>\r\n      <br />\r\n      <br />\r\n      <button onClick={addUser}>SIGN UP</button>\r\n      {/* Direct to the login page */}\r\n      <h2>Already have an account?</h2>\r\n      <button onClick={login}>SIGN IN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js",["161","162","163","164"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Home = () => {\r\n\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);  \r\n\r\n  let history = useHistory();\r\n\r\n  // On load, check if the user is an artist. If he/she is,\r\n  // then route to the \"/Home_artist\".\r\n  React.useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data)\r\n     })\r\n\r\n    userList.map((val, key) => {\r\n      // Can't get the response from the Profile. We need to define it again.\r\n      var response = localStorage.getItem(\"response\");\r\n      response = jwt.decode(response);\r\n      response = response.id;\r\n      // If the id of the user is equal to the response, show user's\r\n      // info in the div \"middle\".\r\n      if(val.id == response){\r\n        console.log(val.id);\r\n        if(val.artist == 1){\r\n          history.push(\"/Home_artist\");\r\n        }\r\n    }})\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SONGS</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js",["165"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\n\r\nconst Home = () => {\r\n  \r\n  let history = useHistory();\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  // This method is to route to the my music page.\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SONGS</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js",["166","167","168","169"],"// This is the page where the user is directed after logging in.\r\nimport \"../styles/home.css\";\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst Search = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    // console.log(response);\r\n    response = jwt.decode(response);\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(response);\r\n    // console.log(response.id);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n// This method is to route to the search page.\r\nconst toSearch = () => {\r\n    history.push(\"/Search\")\r\n}\r\n\r\n// This method is to change the email property of the user.\r\nconst editEmail = () => {\r\n    \r\n}\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>EMAIL</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js",["170","171","172"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Country = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new Country.\r\n  const [newCountry, setNewCountry] = useState(\"\");\r\n\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorage.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editCountry = (id) => {\r\n    Axios.put(\"http://localhost:3001/editCountry\", { country: newCountry, id: id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Country</h1>\r\n              <input type=\"text\" placeholder=\"Enter the country\" onChange={(event) => {setNewCountry(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editCountry(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Country;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js",["173","174","175"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Gender = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new gender.\r\n  const [newGender, setNewGender] = useState(\"\");\r\n\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorage.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editGender = (id) => {\r\n    Axios.put(\"http://localhost:3001/editGender\", { gender: newGender, id: id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Gender</h1>\r\n              <input type=\"text\" placeholder=\"Enter the gender\" onChange={(event) => {setNewGender(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editGender(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Gender;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js",["176","177","178"],"// This is the pPhone where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Phone = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new gender.\r\n  const [newPhone, setNewPhone] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storPhone and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorPhone.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storPhone\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home pPhone.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile pPhone.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search pPhone.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editPhone = (id) => {\r\n    Axios.put(\"http://localhost:3001/editPhone\", { phone: newPhone, id: id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Phone</h1>\r\n              <input type=\"text\" placeholder=\"Enter the Phone\" onChange={(event) => {setNewPhone(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editPhone(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Phone;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js",["179","180","181","182"],"// This is the pArtist where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Artist = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [artist_name, setArtist_name] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storArtist and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    response = jwt.decode(response);\r\n    response = response.id;\r\n    // console.log(response);\r\n    setId(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storArtist\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home pArtist.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile pArtist.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search pArtist.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const addArtist = (event) => {\r\n    Axios.put(\"http://localhost:3001/editArtist\", { artist: 1, id: id })\r\n\r\n    if(!artist_name || !genre){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/createArtist\", {\r\n        id: id,\r\n        artist_name: artist_name,\r\n        genre: genre,\r\n      }).then((response) => {\r\n        console.log(response);\r\n        history.push(\"/Home_artist\");\r\n      }\r\n      )}\r\n  };\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Artist</h1>\r\n              <input type=\"text\" placeholder=\"Enter the artist name\" onChange={(event) => {setArtist_name(event.target.value);}}/><br /><br />\r\n              <input type=\"text\" placeholder=\"Enter the genre\" onChange={(event) => {setGenre(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {addArtist();}}>{\" \"}Create!</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js",["183","184","185"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Age = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new gender.\r\n  const [newAge, setNewAge] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editAge = (id) => {\r\n    Axios.put(\"http://localhost:3001/editAge\", { age: newAge, id: id })\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Age</h1>\r\n              <input type=\"text\" placeholder=\"Enter the age\" onChange={(event) => {setNewAge(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editAge(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Age;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js",["186","187","188"],"// This is the page where the user is directed after logging in.\r\nimport \"./styles/home.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst Search = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  const [song_name, setSong_name] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  const [source, setSource] = useState(\"\");\r\n\r\n  // // This function is to search the users.\r\n  // const searchUser = () => {\r\n  //   Axios.post(\"http://localhost:3001/searchUser\", {\r\n  //     username: username,\r\n  //   }).then((response) => {\r\n  //     // console.log(response.data);\r\n  //     if (response.data) {\r\n  //       setResult(response.data);\r\n  //       console.log(result);\r\n  //       console.log(response.data);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  // This function is to search the tracks.\r\n  const searchTrack = () => {\r\n    Axios.post(\"http://localhost:3001/searchTrack\", {\r\n      song_name: song_name,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        setResult(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const changeSong = (param) => {\r\n    setSource(param)\r\n  }\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SEARCH</h1>\r\n          {/* Search results */}\r\n          <input className=\"input\" type=\"text\" onChange={(event) => {setSong_name(event.target.value);}}/>\r\n          <button onClick={searchTrack}>Search</button>\r\n          {result.map((val, key) => {\r\n              return (\r\n                <div className=\"users\">\r\n                  <button onClick={() => setSource(val.song_src)}>{val.song_name}</button>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              src={source}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search_artist.js",["189","190","191"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile_artist.js",["192","193","194","195","196","197","198","199"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Profile_artist = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n  \r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data)\r\n     })\r\n\r\n    console.log(\"userList\",userList);\r\n    \r\n    // Map around the database and find the user with the relevant id.\r\n    userList.map((val, key) => {\r\n      var response = localStorage.getItem(\"response\");\r\n      response = jwt.decode(response);\r\n      response = response.id;\r\n      // If the id of the user is equal to the response, show user's\r\n      // info in the div \"middle\".\r\n      if(val.id == response){\r\n        console.log(val.id);\r\n        if(val.artist == 0){\r\n          history.push(\"/Profile\");\r\n        }\r\n    }})\r\n  },[])\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following method are to route to the relevant links.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\")\r\n  }\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        {/* Profile info */}\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle_h\"> \r\n            <h3 className=\"userInfo\">username: {val.username}</h3>       <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">email: {val.email}</h3>             <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">gender: {val.gender}</h3>           <button className=\"editButton\" onClick={toGender}>edit</button><br/>\r\n            <h3 className=\"userInfo\">age: {val.age}</h3>                 <button className=\"editButton\" onClick={toAge}>edit</button><br/>\r\n            <h3 className=\"userInfo\">country: {val.country}</h3>         <button className=\"editButton\" onClick={toCountry}>edit</button><br/>\r\n            <h3 className=\"userInfo\">phone number: {val.phone}</h3>      <button className=\"editButton\" onClick={toPhone}>edit</button><br/>\r\n          </div>\r\n        }})}\r\n\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n          <h3>test 1</h3>\r\n          <h3>test 2</h3>\r\n          <h3>test 3</h3>\r\n          <h3>test 4</h3>\r\n        </div> \r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Profile_artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyMusic.js",["200","201","202","203","204"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyUpload.js",["205"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\n\r\nconst MyUpload = () => {\r\n  \r\n  let history = useHistory();\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  // This method is to route to the my music page.\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>MY UPLOAD</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default MyUpload;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateAlbumSingle.js",["206","207","208"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport {useState} from \"react\";\r\nimport Axios from \"axios\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst CreateAlbumSingle = () => {\r\n\r\n  const [id_album, setId_album] = useState(\"\");\r\n  const [id_artist, setId_artist] = useState(\"\");\r\n  const [album_name, setAlbum_name] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [img_src, setImg_src] = useState(\"\");\r\n    \r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    response = jwt.decode(response);\r\n    response = response.id;\r\n    // console.log(response);\r\n    setId_artist(response);\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  // This method is to route to the my music page.\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n\r\n  // This method is to add an album to the database.\r\n  const addAlbum = (event) => {\r\n\r\n    var id_album =  null;\r\n    setId_album(id_album);\r\n\r\n    if(!album_name || !genre || !year || !img_src){\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/createAlbum\", {\r\n        id_artist: id_artist,\r\n        album_name: album_name,\r\n        genre: genre,\r\n        year: year,\r\n        img_src: img_src\r\n      }).then((response) => {\r\n        console.log(response);\r\n        localStorage.setItem(\"id_artist\", id_artist);\r\n        localStorage.setItem(\"album_name\", album_name);\r\n        history.push(\"/CreateSong\")\r\n      }\r\n      )}\r\n  };\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>CREATE ALBUM/SINGLE</h1>\r\n          <input type=\"text\" placeholder=\"Enter the album name\" onChange={(event) => {setAlbum_name(event.target.value);}}/><br /><br />\r\n          <input type=\"text\" placeholder=\"Enter the genre\" onChange={(event) => {setGenre(event.target.value);}}/><br /><br />\r\n          <input type=\"text\" placeholder=\"Enter the year\" onChange={(event) => {setYear(event.target.value);}}/><br /><br />\r\n          <input type=\"text\" placeholder=\"Enter the album cover's source\" onChange={(event) => {setImg_src(event.target.value);}}/><br /><br />\r\n          <button onClick={() => {addAlbum();}}>{\" \"}Create!</button>\r\n\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default CreateAlbumSingle;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\CreateSong.js",["209","210","211"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport './styles/MusicPlayer.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport {useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst CreateSong = () => {\r\n  \r\n  const[id_song, setId_song] = useState(\"\");\r\n  const [song_name, setSong_name] = useState(\"\");\r\n  const [album_name, setAlbum_name] = useState(\"\");\r\n  const [id_artist, setId_artist] = useState(\"\");\r\n  const [song_src, setSong_src] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    var album_name = localStorage.getItem(\"album_name\");\r\n    var id_artist = localStorage.getItem(\"id_artist\");\r\n\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n    // setId_artist(response);\r\n    setAlbum_name(album_name);\r\n    setId_artist(id_artist)\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  // This method is to route to the my music page.\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n\r\n  const addSong = (event) => {\r\n\r\n    var id_song =  null;\r\n    setId_song(id_song);\r\n\r\n    if(!song_name || !song_src){\r\n        event.preventDefault();\r\n    }\r\n  \r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/createSong\", {\r\n        song_name: song_name,\r\n        album_name: album_name,\r\n        id_artist: id_artist,\r\n        song_src: song_src\r\n      }).then((response) => {\r\n        console.log(response);\r\n        history.push(\"/CreateSong\")\r\n      }\r\n      )}\r\n  };\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>CREATE SONG</h1>\r\n          <input type=\"text\" placeholder=\"Enter the song name\" onChange={(event) => {setSong_name(event.target.value);}}/><br /><br />\r\n          <input type=\"text\" placeholder=\"Enter the music source\" onChange={(event) => {setSong_src(event.target.value);}}/><br /><br />\r\n          <button onClick={() => {addSong();}}>{\" \"}Create</button><br /><br />\r\n          <button onClick={toMyMusic}>DONE</button>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        <div className =\"buttom\">\r\n        <AudioPlayer\r\n              // src=\"https://drive.google.com/file/d/1-6TgFFkkBkja4-ucvHadrTucep4_UfKC/view?usp=sharing\"\r\n              src=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n              // src=\"../public/Used.mp3\"\r\n              // src={music}\r\n              onPlay={e => console.log(\"onPlay\")}\r\n              // other props here\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default CreateSong;",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":5,"column":27,"nodeType":"218","messageId":"219","endLine":5,"endColumn":36},{"ruleId":"216","severity":1,"message":"220","line":19,"column":13,"nodeType":"218","messageId":"219","endLine":19,"endColumn":21},{"ruleId":"216","severity":1,"message":"221","line":19,"column":23,"nodeType":"218","messageId":"219","endLine":19,"endColumn":29},{"ruleId":"216","severity":1,"message":"222","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":37,"column":13,"nodeType":"225","endLine":37,"endColumn":52},{"ruleId":"216","severity":1,"message":"222","line":6,"column":10,"nodeType":"218","messageId":"219","endLine":6,"endColumn":14},{"ruleId":"216","severity":1,"message":"226","line":10,"column":10,"nodeType":"218","messageId":"219","endLine":10,"endColumn":12},{"ruleId":"216","severity":1,"message":"227","line":63,"column":9,"nodeType":"218","messageId":"219","endLine":63,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":73,"column":9,"nodeType":"225","endLine":73,"endColumn":48},{"ruleId":"216","severity":1,"message":"222","line":7,"column":10,"nodeType":"218","messageId":"219","endLine":7,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":45,"column":13,"nodeType":"225","endLine":45,"endColumn":51},{"ruleId":"212","replacedBy":"228"},{"ruleId":"214","replacedBy":"229"},{"ruleId":"216","severity":1,"message":"220","line":36,"column":13,"nodeType":"218","messageId":"219","endLine":36,"endColumn":21},{"ruleId":"216","severity":1,"message":"221","line":36,"column":23,"nodeType":"218","messageId":"219","endLine":36,"endColumn":29},{"ruleId":"230","severity":1,"message":"231","line":52,"column":15,"nodeType":"225","messageId":"232","endLine":52,"endColumn":28},{"ruleId":"230","severity":1,"message":"233","line":55,"column":15,"nodeType":"225","messageId":"232","endLine":55,"endColumn":31},{"ruleId":"230","severity":1,"message":"234","line":58,"column":15,"nodeType":"225","messageId":"232","endLine":58,"endColumn":30},{"ruleId":"216","severity":1,"message":"222","line":7,"column":10,"nodeType":"218","messageId":"219","endLine":7,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":46,"column":13,"nodeType":"225","endLine":46,"endColumn":51},{"ruleId":"235","severity":1,"message":"236","line":26,"column":29,"nodeType":"237","messageId":"238","endLine":26,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":32,"column":17,"nodeType":"241","messageId":"242","endLine":32,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":34,"column":23,"nodeType":"241","messageId":"242","endLine":34,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":38,"column":5,"nodeType":"245","endLine":38,"endColumn":7,"suggestions":"246"},{"ruleId":"223","severity":1,"message":"224","line":88,"column":13,"nodeType":"225","endLine":88,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":103,"column":34,"nodeType":"237","messageId":"248","endLine":103,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":110,"column":21,"nodeType":"241","messageId":"242","endLine":110,"endColumn":23},{"ruleId":"216","severity":1,"message":"222","line":6,"column":10,"nodeType":"218","messageId":"219","endLine":6,"endColumn":14},{"ruleId":"216","severity":1,"message":"249","line":7,"column":8,"nodeType":"218","messageId":"219","endLine":7,"endColumn":19},{"ruleId":"216","severity":1,"message":"250","line":8,"column":7,"nodeType":"218","messageId":"219","endLine":8,"endColumn":10},{"ruleId":"216","severity":1,"message":"226","line":12,"column":10,"nodeType":"218","messageId":"219","endLine":12,"endColumn":12},{"ruleId":"216","severity":1,"message":"227","line":65,"column":9,"nodeType":"218","messageId":"219","endLine":65,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":75,"column":9,"nodeType":"225","endLine":75,"endColumn":48},{"ruleId":"235","severity":1,"message":"236","line":26,"column":29,"nodeType":"237","messageId":"238","endLine":26,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":33,"column":17,"nodeType":"241","messageId":"242","endLine":33,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":35,"column":23,"nodeType":"241","messageId":"242","endLine":35,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":68,"column":13,"nodeType":"225","endLine":68,"endColumn":52},{"ruleId":"223","severity":1,"message":"224","line":45,"column":13,"nodeType":"225","endLine":45,"endColumn":52},{"ruleId":"216","severity":1,"message":"251","line":5,"column":10,"nodeType":"218","messageId":"219","endLine":5,"endColumn":18},{"ruleId":"216","severity":1,"message":"252","line":7,"column":8,"nodeType":"218","messageId":"219","endLine":7,"endColumn":13},{"ruleId":"216","severity":1,"message":"253","line":57,"column":7,"nodeType":"218","messageId":"219","endLine":57,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":67,"column":13,"nodeType":"225","endLine":67,"endColumn":52},{"ruleId":"223","severity":1,"message":"224","line":68,"column":13,"nodeType":"225","endLine":68,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":82,"column":34,"nodeType":"237","messageId":"248","endLine":82,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":89,"column":21,"nodeType":"241","messageId":"242","endLine":89,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":68,"column":13,"nodeType":"225","endLine":68,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":82,"column":34,"nodeType":"237","messageId":"248","endLine":82,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":89,"column":21,"nodeType":"241","messageId":"242","endLine":89,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":67,"column":13,"nodeType":"225","endLine":67,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":81,"column":34,"nodeType":"237","messageId":"248","endLine":81,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":88,"column":21,"nodeType":"241","messageId":"242","endLine":88,"endColumn":23},{"ruleId":"243","severity":1,"message":"254","line":23,"column":3,"nodeType":"255","endLine":23,"endColumn":18,"suggestions":"256"},{"ruleId":"223","severity":1,"message":"224","line":82,"column":13,"nodeType":"225","endLine":82,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":96,"column":34,"nodeType":"237","messageId":"248","endLine":96,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":103,"column":21,"nodeType":"241","messageId":"242","endLine":103,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":62,"column":13,"nodeType":"225","endLine":62,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":76,"column":34,"nodeType":"237","messageId":"248","endLine":76,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":83,"column":21,"nodeType":"241","messageId":"242","endLine":83,"endColumn":23},{"ruleId":"216","severity":1,"message":"250","line":9,"column":7,"nodeType":"218","messageId":"219","endLine":9,"endColumn":10},{"ruleId":"216","severity":1,"message":"257","line":67,"column":9,"nodeType":"218","messageId":"219","endLine":67,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":77,"column":13,"nodeType":"225","endLine":77,"endColumn":52},{"ruleId":"216","severity":1,"message":"250","line":9,"column":7,"nodeType":"218","messageId":"219","endLine":9,"endColumn":10},{"ruleId":"216","severity":1,"message":"257","line":72,"column":9,"nodeType":"218","messageId":"219","endLine":72,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":82,"column":13,"nodeType":"225","endLine":82,"endColumn":52},{"ruleId":"235","severity":1,"message":"236","line":26,"column":29,"nodeType":"237","messageId":"238","endLine":26,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":32,"column":17,"nodeType":"241","messageId":"242","endLine":32,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":34,"column":23,"nodeType":"241","messageId":"242","endLine":34,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":38,"column":5,"nodeType":"245","endLine":38,"endColumn":7,"suggestions":"258"},{"ruleId":"216","severity":1,"message":"259","line":69,"column":9,"nodeType":"218","messageId":"219","endLine":69,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":81,"column":13,"nodeType":"225","endLine":81,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":97,"column":34,"nodeType":"237","messageId":"248","endLine":97,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":104,"column":21,"nodeType":"241","messageId":"242","endLine":104,"endColumn":23},{"ruleId":"216","severity":1,"message":"260","line":51,"column":9,"nodeType":"218","messageId":"219","endLine":51,"endColumn":21},{"ruleId":"216","severity":1,"message":"261","line":55,"column":9,"nodeType":"218","messageId":"219","endLine":55,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":64,"column":13,"nodeType":"225","endLine":64,"endColumn":52},{"ruleId":"235","severity":1,"message":"247","line":82,"column":37,"nodeType":"237","messageId":"248","endLine":82,"endColumn":39},{"ruleId":"239","severity":1,"message":"240","line":89,"column":28,"nodeType":"241","messageId":"242","endLine":89,"endColumn":30},{"ruleId":"223","severity":1,"message":"224","line":45,"column":13,"nodeType":"225","endLine":45,"endColumn":52},{"ruleId":"216","severity":1,"message":"262","line":14,"column":10,"nodeType":"218","messageId":"219","endLine":14,"endColumn":18},{"ruleId":"243","severity":1,"message":"263","line":23,"column":3,"nodeType":"255","endLine":23,"endColumn":18,"suggestions":"264"},{"ruleId":"223","severity":1,"message":"224","line":90,"column":13,"nodeType":"225","endLine":90,"endColumn":52},{"ruleId":"216","severity":1,"message":"265","line":13,"column":9,"nodeType":"218","messageId":"219","endLine":13,"endColumn":16},{"ruleId":"243","severity":1,"message":"266","line":21,"column":3,"nodeType":"255","endLine":21,"endColumn":18,"suggestions":"267"},{"ruleId":"223","severity":1,"message":"224","line":88,"column":13,"nodeType":"225","endLine":88,"endColumn":52},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'loaded' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'getUsers' is assigned a value but never used.",["268"],["269"],"react/jsx-pascal-case","Imported JSX component Home_artist must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Profile_artist must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Search_artist must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'userList'. Either include them or remove the dependency array.","ArrayExpression",["270"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'AudioPlayer' is defined but never used.","'jwt' is assigned a value but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'editEmail' is assigned a value but never used.","React Hook useEffect contains a call to 'setId'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["271"],"'changeSong' is assigned a value but never used.",["272"],"'toArtist' is assigned a value but never used.","'toCreateSong' is assigned a value but never used.","'toMyUpload' is assigned a value but never used.","'id_album' is assigned a value but never used.","React Hook useEffect contains a call to 'setId_artist'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["273"],"'id_song' is assigned a value but never used.","React Hook useEffect contains a call to 'setAlbum_name'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["274"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"275","fix":"279"},{"desc":"277","fix":"280"},{"desc":"277","fix":"281"},"Update the dependencies array to be: [history, userList]",{"range":"282","text":"283"},"Add dependencies array: []",{"range":"284","text":"285"},{"range":"286","text":"283"},{"range":"287","text":"285"},{"range":"288","text":"285"},[1273,1275],"[history, userList]",[1091,1091],", []",[1272,1274],[981,981],[1032,1032]]