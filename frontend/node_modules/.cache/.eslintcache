[{"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js":"1","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js":"2","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js":"3","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js":"4","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js":"5","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js":"6","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js":"7","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js":"8","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js":"9","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js":"10","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js":"11","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js":"12","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js":"13","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js":"14","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js":"15","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js":"16","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js":"17","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js":"18","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js":"19","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js":"20","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search_artist.js":"21","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile_artist.js":"22","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyMusic.js":"23"},{"size":220,"mtime":1622566760000,"results":"24","hashOfConfig":"25"},{"size":902,"mtime":1624187834738,"results":"26","hashOfConfig":"25"},{"size":1898,"mtime":1624209009008,"results":"27","hashOfConfig":"25"},{"size":2764,"mtime":1624188446042,"results":"28","hashOfConfig":"25"},{"size":1940,"mtime":1624186766468,"results":"29","hashOfConfig":"25"},{"size":227,"mtime":1624275278394,"results":"30","hashOfConfig":"31"},{"size":2798,"mtime":1624556495668,"results":"32","hashOfConfig":"31"},{"size":1984,"mtime":1624526225079,"results":"33","hashOfConfig":"31"},{"size":4513,"mtime":1624552103991,"results":"34","hashOfConfig":"31"},{"size":2784,"mtime":1624527563790,"results":"35","hashOfConfig":"31"},{"size":2849,"mtime":1624552036592,"results":"36","hashOfConfig":"31"},{"size":2115,"mtime":1624554396852,"results":"37","hashOfConfig":"31"},{"size":0,"mtime":1624383057886,"results":"38","hashOfConfig":"31"},{"size":2825,"mtime":1624484593042,"results":"39","hashOfConfig":"31"},{"size":3755,"mtime":1624534430085,"results":"40","hashOfConfig":"31"},{"size":3740,"mtime":1624534419222,"results":"41","hashOfConfig":"31"},{"size":3736,"mtime":1624535114511,"results":"42","hashOfConfig":"31"},{"size":3757,"mtime":1624535813360,"results":"43","hashOfConfig":"31"},{"size":3694,"mtime":1624534426781,"results":"44","hashOfConfig":"31"},{"size":2927,"mtime":1624541379238,"results":"45","hashOfConfig":"31"},{"size":3121,"mtime":1624554661614,"results":"46","hashOfConfig":"31"},{"size":4595,"mtime":1624571966779,"results":"47","hashOfConfig":"31"},{"size":2395,"mtime":1624622091889,"results":"48","hashOfConfig":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1v75x9b",{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"b5vr4y",{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js",[],["112","113"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js",["114","115","116"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js",["117","118"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js",["119","120","121","122"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js",["123","124"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js",[],["125","126"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js",["127","128","129","130","131"],"// This is the main app handling the route switches.\r\n\r\nimport './styles/App.css';\r\nimport Signup from \"./Signup\"\r\nimport Login from \"./Login\"\r\nimport Home from \"./Home\"\r\nimport Search from \"./Search\"\r\nimport Home_artist from \"./Home_artist\"\r\nimport Profile_artist from './Profile_artist';\r\nimport Search_artist from './Search_artist';\r\nimport Profile from \"./Profile\"\r\nimport MyMusic from './MyMusic';\r\nimport Username from \"./edits/Username\"\r\nimport Email from \"./edits/Email\"\r\nimport Gender from \"./edits/Gender\"\r\nimport Age from \"./edits/Age\"\r\nimport Artist from \"./edits/Artist\"\r\nimport Country from \"./edits/Country\"\r\nimport Phone from \"./edits/Phone\"\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      loggedIn: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n      return (\r\n        <Router>\r\n        <div className=\"App\">\r\n          {/* Routes */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Signup></Signup>\r\n            </Route>\r\n            <Route exact path=\"/Login\">\r\n              <Login></Login>\r\n            </Route>\r\n            <Route exact path=\"/Home\">\r\n              <Home></Home>\r\n            </Route>\r\n            <Route exact path=\"/Home_artist\">\r\n              <Home_artist></Home_artist>\r\n            </Route>\r\n            <Route exact path=\"/Profile_artist\">\r\n              <Profile_artist></Profile_artist>\r\n            </Route>\r\n            <Route exact path=\"/Search_artist\">\r\n              <Search_artist></Search_artist>\r\n            </Route>\r\n            <Route exact path=\"/Username\">\r\n              <Username></Username>\r\n            </Route>\r\n            <Route exact path=\"/Email\">\r\n              <Email></Email>\r\n            </Route>\r\n            <Route exact path=\"/Gender\">\r\n              <Gender></Gender>\r\n            </Route>\r\n            <Route exact path=\"/Age\">\r\n              <Age></Age>\r\n            </Route>\r\n            <Route exact path=\"/Artist\">\r\n              <Artist></Artist>\r\n            </Route>\r\n            <Route exact path=\"/Country\">\r\n              <Country></Country>\r\n            </Route>\r\n            <Route exact path=\"/Phone\">\r\n              <Phone></Phone>\r\n            </Route>\r\n            <Route exact path=\"/Profile\">\r\n              <Profile></Profile>\r\n            </Route>\r\n            <Route exact path=\"/Search\">\r\n              <Search></Search>\r\n            </Route>\r\n            <Route exact path=\"/MyMusic\">\r\n              <MyMusic></MyMusic>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js",["132","133"],"// Importing the necessary libraries.\r\nimport './styles/login.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// LOGIN PAGE\r\nconst Login = () => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method post a request to the /login, which will\r\n  // activate the loginUser function inside the controller.\r\n  // That method will return a code and on success, it'll be 200.\r\n  // In that case, it'll be directed to the \"/main\".\r\n  const logUser = (e) => {\r\n    var status;\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      console.log(response);\r\n      status = response.data.code;\r\n      localStorage.setItem(\"response\", response.data.accessToken);\r\n      if(status === 200){\r\n        history.push(\"/home\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"test\" className=\"Login\">\r\n      {/* Name and logo */}\r\n        <div>\r\n            <img src={volumefy} className=\"logo\"/>\r\n            <h1 className=\"h1text\"> VOLUMEFY</h1><hr/>\r\n        </div>\r\n        {/* Inputs */}\r\n        <h2>Welcome back!</h2>\r\n        {/* Get the username */}\r\n        <h2>User Name</h2>\r\n        <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n        }}/>\r\n        {/* Get the password */}\r\n        <h2>Password</h2>\r\n        <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n        }} /><br/><br/>\r\n        {/* Login */}\r\n        <button onClick={logUser}>SIGN IN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js",["134","135","136","137","138","139"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Profile = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n  \r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data)\r\n     })\r\n    \r\n    // Map around the database and find the user with the relevant id.\r\n    userList.map((val, key) => {\r\n      var response = localStorage.getItem(\"response\");\r\n      response = jwt.decode(response);\r\n      response = response.id;\r\n      // If the id of the user is equal to the response, show user's\r\n      // info in the div \"middle\".\r\n      if(val.id == response){\r\n        console.log(val.id);\r\n        if(val.artist == 1){\r\n          history.push(\"/Profile_artist\");\r\n        }\r\n    }})\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\")\r\n  }\r\n\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {/* Profile info */}\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle_h\"> \r\n            <h3 className=\"userInfo\">username: {val.username}</h3>       <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">email: {val.email}</h3>             <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">gender: {val.gender}</h3>           <button className=\"editButton\" onClick={toGender}>edit</button><br/>\r\n            <h3 className=\"userInfo\">age: {val.age}</h3>                 <button className=\"editButton\" onClick={toAge}>edit</button><br/>\r\n            <h3 className=\"userInfo\">country: {val.country}</h3>         <button className=\"editButton\" onClick={toCountry}>edit</button><br/>\r\n            <h3 className=\"userInfo\">phone number: {val.phone}</h3>      <button className=\"editButton\" onClick={toPhone}>edit</button><br/>\r\n            <h3 className=\"userInfo\">artist: {val.artist}</h3>           <button className=\"editButton\" onClick={toArtist}>edit</button><br/>\r\n          </div>\r\n        }})}\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js",["140","141","142","143"],"import \"./styles/signup.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// HOME (INDEX) PAGE\r\nconst Signup = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userlist, setUserList] = useState([]);\r\n\r\n  // Defining history. It'll be used while routing \r\n  // between pages.\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method is to add users to the database.\r\n  const addUser = (event) => {\r\n    var id =  null;\r\n    setId(id);\r\n    // If there's any null element, don't load the new\r\n    // page nor add the element to the table.\r\n    if(!username || !email || !password){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/create\", {\r\n        id: id,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }).then(() => {\r\n        setUserList([\r\n          ...userlist,\r\n          {\r\n            id: id,\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n          },\r\n        ]);\r\n      });\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  // This method is to route to the login page.\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  // This method is to get the elements from the database.\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {/* Name and logo */}\r\n      <div>\r\n        <img src={volumefy} className=\"logo\" />\r\n        <h1 className=\"h1text\"> VOLUMEFY</h1>\r\n        <hr />\r\n      </div>\r\n      {/* Inputs */}\r\n      <h2>Email Address</h2>\r\n      <input className=\"input\" type=\"email\" onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}/>\r\n      <h2>User Name</h2>\r\n      <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}/>\r\n      <h2>Password</h2>\r\n      <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}/>\r\n      <br />\r\n      <br />\r\n      <button onClick={addUser}>SIGN UP</button>\r\n      {/* Direct to the login page */}\r\n      <h2>Already have an account?</h2>\r\n      <button onClick={login}>SIGN IN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js",["144","145","146","147"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {useState} from \"react\";\r\nimport Axios from \"axios\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);  \r\n\r\n  let history = useHistory();\r\n\r\n  // On load, check if the user is an artist. If he/she is,\r\n  // then route to the \"/Home_artist\".\r\n  React.useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data)\r\n     })\r\n\r\n    userList.map((val, key) => {\r\n      // Can't get the response from the Profile. We need to define it again.\r\n      var response = localStorage.getItem(\"response\");\r\n      response = jwt.decode(response);\r\n      response = response.id;\r\n      // If the id of the user is equal to the response, show user's\r\n      // info in the div \"middle\".\r\n      if(val.id == response){\r\n        console.log(val.id);\r\n        if(val.artist == 1){\r\n          history.push(\"/Home_artist\");\r\n        }\r\n    }})\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SONGS</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js",["148"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\n\r\nconst Home = () => {\r\n  \r\n  let history = useHistory();\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  // This method is to route to the my music page.\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SONGS</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js",["149","150","151","152"],"// This is the page where the user is directed after logging in.\r\nimport \"../styles/home.css\";\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst Search = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    // console.log(response);\r\n    response = jwt.decode(response);\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(response);\r\n    // console.log(response.id);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n// This method is to route to the search page.\r\nconst toSearch = () => {\r\n    history.push(\"/Search\")\r\n}\r\n\r\n// This method is to change the email property of the user.\r\nconst editEmail = () => {\r\n    \r\n}\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>EMAIL</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js",["153","154","155","156"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Country = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new Country.\r\n  const [newCountry, setNewCountry] = useState(\"\");\r\n\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorage.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editCountry = (id) => {\r\n    Axios.put(\"http://localhost:3001/editCountry\", { country: newCountry, id: id }).then(\r\n      (response) => {\r\n        setUserList(\r\n          userList.map((val) => {\r\n            return val.id == id\r\n              ? {\r\n                  country: newCountry,\r\n                }\r\n              : val;\r\n          })\r\n        );\r\n      }\r\n    );\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Country</h1>\r\n              <input type=\"text\" placeholder=\"Enter the country\" onChange={(event) => {setNewCountry(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editCountry(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Country;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js",["157","158","159","160"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Gender = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new gender.\r\n  const [newGender, setNewGender] = useState(\"\");\r\n\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorage.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editGender = (id) => {\r\n    Axios.put(\"http://localhost:3001/editGender\", { gender: newGender, id: id }).then(\r\n      (response) => {\r\n        setUserList(\r\n          userList.map((val) => {\r\n            return val.id == id\r\n              ? {\r\n                  gender: newGender,\r\n                }\r\n              : val;\r\n          })\r\n        );\r\n      }\r\n    );\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Gender</h1>\r\n              <input type=\"text\" placeholder=\"Enter the gender\" onChange={(event) => {setNewGender(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editGender(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Gender;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js",["161","162","163","164"],"// This is the pPhone where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Phone = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new gender.\r\n  const [newPhone, setNewPhone] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storPhone and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorPhone.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storPhone\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home pPhone.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile pPhone.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search pPhone.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editPhone = (id) => {\r\n    Axios.put(\"http://localhost:3001/editPhone\", { phone: newPhone, id: id }).then(\r\n      (response) => {\r\n        setUserList(\r\n          userList.map((val) => {\r\n            return val.id == id\r\n              ? {\r\n                  phone: newPhone,\r\n                }\r\n              : val;\r\n          })\r\n        );\r\n      }\r\n    );\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Phone</h1>\r\n              <input type=\"text\" placeholder=\"Enter the Phone\" onChange={(event) => {setNewPhone(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editPhone(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Phone;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js",["165","166","167","168"],"// This is the pArtist where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Artist = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new gender.\r\n  const [newArtist, setNewArtist] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storArtist and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorArtist.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storArtist\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home pArtist.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile pArtist.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search pArtist.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editArtist = (id) => {\r\n    Axios.put(\"http://localhost:3001/editArtist\", { artist: newArtist, id: id }).then(\r\n      (response) => {\r\n        setUserList(\r\n          userList.map((val) => {\r\n            return val.id == id\r\n              ? {\r\n                  artist: newArtist,\r\n                }\r\n              : val;\r\n          })\r\n        );\r\n      }\r\n    );\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Artist</h1>\r\n              <input type=\"text\" placeholder=\"Enter the Artist\" onChange={(event) => {setNewArtist(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editArtist(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js",["169","170","171","172"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Age = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  // useState for new gender.\r\n  const [newAge, setNewAge] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the id from it.\r\n  React.useEffect(() => {\r\n    // var response = localStorage.getItem(\"response\");\r\n    // response = jwt.decode(response);\r\n    // response = response.id;\r\n    // console.log(response);\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  const editAge = (id) => {\r\n    Axios.put(\"http://localhost:3001/editAge\", { age: newAge, id: id }).then(\r\n      (response) => {\r\n        setUserList(\r\n          userList.map((val) => {\r\n            return val.id == id\r\n              ? {\r\n                  age: newAge,\r\n                }\r\n              : val;\r\n          })\r\n        );\r\n      }\r\n    );\r\n    history.push(\"/Profile\")\r\n  };\r\n\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle\"> \r\n              <h1>Age</h1>\r\n              <input type=\"text\" placeholder=\"Enter the age\" onChange={(event) => {setNewAge(event.target.value);}}/><br /><br />\r\n              <button onClick={() => {editAge(val.id);}}>{\" \"}Update</button>\r\n          </div>\r\n        }})}\r\n\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Age;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js",["173","174","175"],"// This is the page where the user is directed after logging in.\r\nimport \"./styles/home.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst Search = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  const [username, setUsername] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  // This function is to search the users.\r\n  const searchUser = () => {\r\n    Axios.post(\"http://localhost:3001/searchUser\", {\r\n      username: username,\r\n    }).then((response) => {\r\n      // console.log(response.data);\r\n      if (response.data) {\r\n        setResult(response.data);\r\n        console.log(result);\r\n        console.log(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SEARCH</h1>\r\n          {/* Search results */}\r\n          <input className=\"input\" type=\"text\" onChange={(event) => {setUsername(event.target.value);}}/>\r\n          <button onClick={searchUser}>Search</button>\r\n          {result.map((val, key) => {\r\n              return (\r\n                <div className=\"users\">\r\n                  <h3>username: {val.username}</h3>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search_artist.js",["176","177","178"],"// This is the page where the user is directed after logging in.\r\nimport \"./styles/home.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst Search_artist = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  const [username, setUsername] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  // This function is to search the users.\r\n  const searchUser = () => {\r\n    Axios.post(\"http://localhost:3001/searchUser\", {\r\n      username: username,\r\n    }).then((response) => {\r\n      // console.log(response.data);\r\n      if (response.data) {\r\n        setResult(response.data);\r\n        console.log(result);\r\n        console.log(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SEARCH</h1>\r\n          {/* Search results */}\r\n          <input className=\"input\" type=\"text\" onChange={(event) => {setUsername(event.target.value);}}/>\r\n          <button onClick={searchUser}>Search</button>\r\n          {result.map((val, key) => {\r\n              return (\r\n                <div className=\"users\">\r\n                  <h3>username: {val.username}</h3>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search_artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile_artist.js",["179","180","181","182","183","184"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Profile_artist = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n  \r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data)\r\n     })\r\n    \r\n    // Map around the database and find the user with the relevant id.\r\n    userList.map((val, key) => {\r\n      var response = localStorage.getItem(\"response\");\r\n      response = jwt.decode(response);\r\n      response = response.id;\r\n      // If the id of the user is equal to the response, show user's\r\n      // info in the div \"middle\".\r\n      if(val.id == response){\r\n        console.log(val.id);\r\n        if(val.artist == 0){\r\n          history.push(\"/Profile\");\r\n        }\r\n    }})\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Following method are to route to the relevant links.\r\n  const toHome = () => {\r\n    history.push(\"/Home_artist\")\r\n  }\r\n  const toProfile = () => {\r\n    history.push(\"/Profile_artist\")\r\n  }\r\n  const toSearch = () => {\r\n    history.push(\"/Search_artist\")\r\n  }\r\n  const toGender = () => {\r\n    history.push(\"/Gender\")\r\n  }\r\n  const toAge = () => {\r\n    history.push(\"/Age\")\r\n  }\r\n  const toCountry = () => {\r\n    history.push(\"/Country\")\r\n  }\r\n  const toPhone = () => {\r\n    history.push(\"/Phone\")\r\n  }\r\n  const toArtist = () => {\r\n    history.push(\"/Artist\");\r\n  }\r\n  const toMyMusic = () => {\r\n    history.push(\"/MyMusic\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\" onClick={toMyMusic}>My Music</button>\r\n        </div>\r\n        {/* Profile info */}\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.id;\r\n          // If the id of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.id == response){\r\n          return <div className=\"middle_h\"> \r\n            <h3 className=\"userInfo\">username: {val.username}</h3>       <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">email: {val.email}</h3>             <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">gender: {val.gender}</h3>           <button className=\"editButton\" onClick={toGender}>edit</button><br/>\r\n            <h3 className=\"userInfo\">age: {val.age}</h3>                 <button className=\"editButton\" onClick={toAge}>edit</button><br/>\r\n            <h3 className=\"userInfo\">country: {val.country}</h3>         <button className=\"editButton\" onClick={toCountry}>edit</button><br/>\r\n            <h3 className=\"userInfo\">phone number: {val.phone}</h3>      <button className=\"editButton\" onClick={toPhone}>edit</button><br/>\r\n            <h3 className=\"userInfo\">artist: {val.artist}</h3>           <button className=\"editButton\" onClick={toArtist}>edit</button><br/>\r\n          </div>\r\n        }})}\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Profile_artist;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\MyMusic.js",["185","186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":5,"column":27,"nodeType":"194","messageId":"195","endLine":5,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":19,"column":13,"nodeType":"194","messageId":"195","endLine":19,"endColumn":21},{"ruleId":"192","severity":1,"message":"197","line":19,"column":23,"nodeType":"194","messageId":"195","endLine":19,"endColumn":29},{"ruleId":"192","severity":1,"message":"198","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":37,"column":13,"nodeType":"201","endLine":37,"endColumn":52},{"ruleId":"192","severity":1,"message":"198","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"202","line":10,"column":10,"nodeType":"194","messageId":"195","endLine":10,"endColumn":12},{"ruleId":"192","severity":1,"message":"203","line":63,"column":9,"nodeType":"194","messageId":"195","endLine":63,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":73,"column":9,"nodeType":"201","endLine":73,"endColumn":48},{"ruleId":"192","severity":1,"message":"198","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":45,"column":13,"nodeType":"201","endLine":45,"endColumn":51},{"ruleId":"188","replacedBy":"204"},{"ruleId":"190","replacedBy":"205"},{"ruleId":"192","severity":1,"message":"196","line":33,"column":13,"nodeType":"194","messageId":"195","endLine":33,"endColumn":21},{"ruleId":"192","severity":1,"message":"197","line":33,"column":23,"nodeType":"194","messageId":"195","endLine":33,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":49,"column":15,"nodeType":"201","messageId":"208","endLine":49,"endColumn":28},{"ruleId":"206","severity":1,"message":"209","line":52,"column":15,"nodeType":"201","messageId":"208","endLine":52,"endColumn":31},{"ruleId":"206","severity":1,"message":"210","line":55,"column":15,"nodeType":"201","messageId":"208","endLine":55,"endColumn":30},{"ruleId":"192","severity":1,"message":"198","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":46,"column":13,"nodeType":"201","endLine":46,"endColumn":51},{"ruleId":"211","severity":1,"message":"212","line":22,"column":29,"nodeType":"213","messageId":"214","endLine":22,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":28,"column":17,"nodeType":"217","messageId":"218","endLine":28,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":30,"column":23,"nodeType":"217","messageId":"218","endLine":30,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":83,"column":13,"nodeType":"201","endLine":83,"endColumn":52},{"ruleId":"211","severity":1,"message":"219","line":98,"column":34,"nodeType":"213","messageId":"220","endLine":98,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":105,"column":21,"nodeType":"217","messageId":"218","endLine":105,"endColumn":23},{"ruleId":"192","severity":1,"message":"198","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"202","line":10,"column":10,"nodeType":"194","messageId":"195","endLine":10,"endColumn":12},{"ruleId":"192","severity":1,"message":"203","line":63,"column":9,"nodeType":"194","messageId":"195","endLine":63,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":73,"column":9,"nodeType":"201","endLine":73,"endColumn":48},{"ruleId":"211","severity":1,"message":"212","line":26,"column":29,"nodeType":"213","messageId":"214","endLine":26,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":33,"column":17,"nodeType":"217","messageId":"218","endLine":33,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":35,"column":23,"nodeType":"217","messageId":"218","endLine":35,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":68,"column":13,"nodeType":"201","endLine":68,"endColumn":52},{"ruleId":"199","severity":1,"message":"200","line":43,"column":13,"nodeType":"201","endLine":43,"endColumn":52},{"ruleId":"192","severity":1,"message":"221","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":18},{"ruleId":"192","severity":1,"message":"222","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":13},{"ruleId":"192","severity":1,"message":"223","line":57,"column":7,"nodeType":"194","messageId":"195","endLine":57,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":67,"column":13,"nodeType":"201","endLine":67,"endColumn":52},{"ruleId":"215","severity":1,"message":"216","line":62,"column":27,"nodeType":"217","messageId":"218","endLine":62,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":80,"column":13,"nodeType":"201","endLine":80,"endColumn":52},{"ruleId":"211","severity":1,"message":"219","line":94,"column":34,"nodeType":"213","messageId":"220","endLine":94,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":101,"column":21,"nodeType":"217","messageId":"218","endLine":101,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":62,"column":27,"nodeType":"217","messageId":"218","endLine":62,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":80,"column":13,"nodeType":"201","endLine":80,"endColumn":52},{"ruleId":"211","severity":1,"message":"219","line":94,"column":34,"nodeType":"213","messageId":"220","endLine":94,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":101,"column":21,"nodeType":"217","messageId":"218","endLine":101,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":61,"column":27,"nodeType":"217","messageId":"218","endLine":61,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":79,"column":13,"nodeType":"201","endLine":79,"endColumn":52},{"ruleId":"211","severity":1,"message":"219","line":93,"column":34,"nodeType":"213","messageId":"220","endLine":93,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":100,"column":21,"nodeType":"217","messageId":"218","endLine":100,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":61,"column":27,"nodeType":"217","messageId":"218","endLine":61,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":79,"column":13,"nodeType":"201","endLine":79,"endColumn":52},{"ruleId":"211","severity":1,"message":"219","line":93,"column":34,"nodeType":"213","messageId":"220","endLine":93,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":100,"column":21,"nodeType":"217","messageId":"218","endLine":100,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":61,"column":27,"nodeType":"217","messageId":"218","endLine":61,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":79,"column":13,"nodeType":"201","endLine":79,"endColumn":52},{"ruleId":"211","severity":1,"message":"219","line":93,"column":34,"nodeType":"213","messageId":"220","endLine":93,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":100,"column":21,"nodeType":"217","messageId":"218","endLine":100,"endColumn":23},{"ruleId":"192","severity":1,"message":"224","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"192","severity":1,"message":"225","line":9,"column":7,"nodeType":"194","messageId":"195","endLine":9,"endColumn":10},{"ruleId":"199","severity":1,"message":"200","line":59,"column":13,"nodeType":"201","endLine":59,"endColumn":52},{"ruleId":"192","severity":1,"message":"224","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"192","severity":1,"message":"225","line":9,"column":7,"nodeType":"194","messageId":"195","endLine":9,"endColumn":10},{"ruleId":"199","severity":1,"message":"200","line":63,"column":13,"nodeType":"201","endLine":63,"endColumn":52},{"ruleId":"211","severity":1,"message":"212","line":22,"column":29,"nodeType":"213","messageId":"214","endLine":22,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":28,"column":17,"nodeType":"217","messageId":"218","endLine":28,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":30,"column":23,"nodeType":"217","messageId":"218","endLine":30,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":77,"column":13,"nodeType":"201","endLine":77,"endColumn":52},{"ruleId":"211","severity":1,"message":"219","line":93,"column":34,"nodeType":"213","messageId":"220","endLine":93,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":100,"column":21,"nodeType":"217","messageId":"218","endLine":100,"endColumn":23},{"ruleId":"192","severity":1,"message":"226","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":13},{"ruleId":"227","severity":1,"message":"228","line":37,"column":3,"nodeType":"229","messageId":"230","endLine":37,"endColumn":34},{"ruleId":"199","severity":1,"message":"200","line":44,"column":13,"nodeType":"201","endLine":44,"endColumn":52},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'loaded' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'getUsers' is assigned a value but never used.",["231"],["232"],"react/jsx-pascal-case","Imported JSX component Home_artist must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Profile_artist must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Search_artist must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useState' is defined but never used.","'Axios' is defined but never used.","'editEmail' is assigned a value but never used.","'ReactDOM' is defined but never used.","'jwt' is assigned a value but never used.","'music' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]