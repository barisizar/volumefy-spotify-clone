[{"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js":"1","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js":"2","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js":"3","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js":"4","C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js":"5","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js":"6","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js":"7","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js":"8","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js":"9","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js":"10","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js":"11","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js":"12","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js":"13","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js":"14","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js":"15","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js":"16","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js":"17","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js":"18","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js":"19","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js":"20"},{"size":220,"mtime":1622566760000,"results":"21","hashOfConfig":"22"},{"size":902,"mtime":1624187834738,"results":"23","hashOfConfig":"22"},{"size":1898,"mtime":1624209009008,"results":"24","hashOfConfig":"22"},{"size":2764,"mtime":1624188446042,"results":"25","hashOfConfig":"22"},{"size":1940,"mtime":1624186766468,"results":"26","hashOfConfig":"22"},{"size":227,"mtime":1624275278394,"results":"27","hashOfConfig":"28"},{"size":2331,"mtime":1624477632656,"results":"29","hashOfConfig":"28"},{"size":1954,"mtime":1624477007838,"results":"30","hashOfConfig":"28"},{"size":4173,"mtime":1624477793700,"results":"31","hashOfConfig":"28"},{"size":2784,"mtime":1624477007842,"results":"32","hashOfConfig":"28"},{"size":2441,"mtime":1624477755422,"results":"33","hashOfConfig":"28"},{"size":2129,"mtime":1624364111329,"results":"34","hashOfConfig":"28"},{"size":0,"mtime":1624383057886,"results":"35","hashOfConfig":"28"},{"size":0,"mtime":1624383215394,"results":"36","hashOfConfig":"28"},{"size":0,"mtime":1624383210102,"results":"37","hashOfConfig":"28"},{"size":2413,"mtime":1624383731308,"results":"38","hashOfConfig":"28"},{"size":0,"mtime":1624383223406,"results":"39","hashOfConfig":"28"},{"size":0,"mtime":1624383205759,"results":"40","hashOfConfig":"28"},{"size":0,"mtime":1624383355936,"results":"41","hashOfConfig":"28"},{"size":3850,"mtime":1624477541530,"results":"42","hashOfConfig":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1v75x9b",{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"b5vr4y",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\index.js",[],["93","94"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\App.js",["95","96","97"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Main.js",["98","99"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Home.js",["100","101","102","103"],"C:\\Users\\kirca\\Desktop\\MyVer\\frontend\\src\\Login.js",["104","105"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\index.js",[],["106","107"],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\App.js",["108","109","110"],"// This is the main app handling the route switches.\r\n\r\nimport './styles/App.css';\r\nimport Signup from \"./Signup\"\r\nimport Login from \"./Login\"\r\nimport Home from \"./Home\"\r\nimport Search from \"./Search\"\r\nimport Home_artist from \"./Home_artist\"\r\nimport Profile from \"./Profile\"\r\nimport Username from \"./edits/Username\"\r\nimport Email from \"./edits/Email\"\r\nimport Gender from \"./edits/Gender\"\r\nimport Age from \"./edits/Age\"\r\nimport Artist from \"./edits/Artist\"\r\nimport Country from \"./edits/Country\"\r\nimport Phone from \"./edits/Phone\"\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      loggedIn: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n      return (\r\n        <Router>\r\n        <div className=\"App\">\r\n          {/* Routes */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Signup></Signup>\r\n            </Route>\r\n            <Route exact path=\"/Login\">\r\n              <Login></Login>\r\n            </Route>\r\n            <Route exact path=\"/Home\">\r\n              <Home></Home>\r\n            </Route>\r\n            <Route exact path=\"/Home_artist\">\r\n              <Home_artist></Home_artist>\r\n            </Route>\r\n            <Route exact path=\"/Username\">\r\n              <Username></Username>\r\n            </Route>\r\n            <Route exact path=\"/Email\">\r\n              <Email></Email>\r\n            </Route>\r\n            <Route exact path=\"/Gender\">\r\n              <Gender></Gender>\r\n            </Route>\r\n            <Route exact path=\"/Age\">\r\n              <Age></Age>\r\n            </Route>\r\n            <Route exact path=\"/Artist\">\r\n              <Artist></Artist>\r\n            </Route>\r\n            <Route exact path=\"/Country\">\r\n              <Country></Country>\r\n            </Route>\r\n            <Route exact path=\"/Phone\">\r\n              <Phone></Phone>\r\n            </Route>\r\n            <Route exact path=\"/Profile\">\r\n              <Profile></Profile>\r\n            </Route>\r\n            <Route exact path=\"/Search\">\r\n              <Search></Search>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Login.js",["111","112"],"// Importing the necessary libraries.\r\nimport './styles/login.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// LOGIN PAGE\r\nconst Login = () => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method post a request to the /login, which will\r\n  // activate the loginUser function inside the controller.\r\n  // That method will return a code and on success, it'll be 200.\r\n  // In that case, it'll be directed to the \"/main\".\r\n  const logUser = (e) => {\r\n    var status;\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      status = response.data.code;\r\n      localStorage.setItem(\"response\", response.data.accessToken);\r\n      if(status === 200){\r\n        history.push(\"/home\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"test\" className=\"Login\">\r\n      {/* Name and logo */}\r\n        <div>\r\n            <img src={volumefy} className=\"logo\"/>\r\n            <h1 className=\"h1text\"> VOLUMEFY</h1><hr/>\r\n        </div>\r\n        {/* Inputs */}\r\n        <h2>Welcome back!</h2>\r\n        {/* Get the username */}\r\n        <h2>User Name</h2>\r\n        <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n        }}/>\r\n        {/* Get the password */}\r\n        <h2>Password</h2>\r\n        <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n        }} /><br/><br/>\r\n        {/* Login */}\r\n        <button onClick={logUser}>SIGN IN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Profile.js",["113","114","115","116"],"// This is the page where the user is directed after logging in.\r\nimport './styles/profile.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Axios from \"axios\";\r\nimport {useState} from \"react\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Profile = () => {\r\n  // We'll store all the users in the database inside this list.\r\n  const [userList, setUserList] = useState([]);\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    response = jwt.decode(response);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n\r\n    // Send a get request to the database. \r\n    Axios.get(\"http://localhost:3001/users\").then((response2) => {\r\n        setUserList(response2.data)\r\n    })\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        {/* Profile info */}\r\n        {userList.map((val, key) => {\r\n          // Can't get the response from the Profile. We need to define it again.\r\n          var response = localStorage.getItem(\"response\");\r\n          response = jwt.decode(response);\r\n          response = response.username;\r\n          // If the usarname of the user is equal to the response, show user's\r\n          // info in the div \"middle\".\r\n          if(val.username == response){\r\n          return <div className=\"middle_h\"> \r\n            <h3 className=\"userInfo\">username: {val.username}</h3>             <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">email: {val.email}</h3>                   <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">gender: {val.gender}</h3>                 <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">age: {val.age}</h3>                       <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">country: {val.country}</h3>               <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">phone number: {val.phone_number}</h3>     <button className=\"editButton\">edit</button><br/>\r\n            <h3 className=\"userInfo\">artist: {val.artist}</h3>                 <button className=\"editButton\">edit</button><br/>\r\n          </div>\r\n        }})}\r\n        {/* Friends */}\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Signup.js",["117","118","119","120"],"import \"./styles/signup.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// HOME (INDEX) PAGE\r\nconst Signup = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userlist, setUserList] = useState([]);\r\n\r\n  // Defining history. It'll be used while routing \r\n  // between pages.\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"response\")){\r\n      history.push(\"/Home\");\r\n    };\r\n  })\r\n\r\n  // This method is to add users to the database.\r\n  const addUser = (event) => {\r\n    var id =  null;\r\n    setId(id);\r\n    // If there's any null element, don't load the new\r\n    // page nor add the element to the table.\r\n    if(!username || !email || !password){\r\n      event.preventDefault();\r\n    }\r\n    // Add elements to the database.\r\n    else{\r\n      Axios.post(\"http://localhost:3001/create\", {\r\n        id: id,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }).then(() => {\r\n        setUserList([\r\n          ...userlist,\r\n          {\r\n            id: id,\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n          },\r\n        ]);\r\n      });\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  // This method is to route to the login page.\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  // This method is to get the elements from the database.\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/users\").then((response) => {\r\n      setUserList(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {/* Name and logo */}\r\n      <div>\r\n        <img src={volumefy} className=\"logo\" />\r\n        <h1 className=\"h1text\"> VOLUMEFY</h1>\r\n        <hr />\r\n      </div>\r\n      {/* Inputs */}\r\n      <h2>Email Address</h2>\r\n      <input className=\"input\" type=\"email\" onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}/>\r\n      <h2>User Name</h2>\r\n      <input className=\"input\" type=\"text\" onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}/>\r\n      <h2>Password</h2>\r\n      <input className=\"input\" type=\"password\" onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}/>\r\n      <br />\r\n      <br />\r\n      <button onClick={addUser}>SIGN UP</button>\r\n      {/* Direct to the login page */}\r\n      <h2>Already have an account?</h2>\r\n      <button onClick={login}>SIGN IN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home.js",["121","122"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Home = () => {\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    console.log(response);\r\n    response = jwt.decode(response);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  // This method is to route to the search page.\r\n  const toSearch = () => {\r\n    history.push(\"/Search\")\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\" onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SONGS</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Home_artist.js",["123","124"],"// This is the page where the user is directed after logging in.\r\nimport './styles/home.css';\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Main_user = () => {\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    console.log(response);\r\n    response = jwt.decode(response);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\">Home</button><br/><br/>\r\n          <button className=\"profileButton\">Profile</button><br/><br/>\r\n          <button className=\"searchButton\">Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button><br/><br/>\r\n          <button className=\"mymusicButton\">My Music</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SONGS</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Main_user;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Username.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Email.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Country.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Gender.js",["125","126","127","128"],"// This is the page where the user is directed after logging in.\r\nimport '../styles/home.css';\r\nimport volumefy from \"../images/volumefy.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Profile from '../Profile';\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst Home = () => {\r\n  \r\n  let history = useHistory();\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    console.log(response);\r\n    response = jwt.decode(response);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n  const setGender = () => {\r\n    history.push(\"/Profile\");\r\n  }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\">Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>gender</h1>\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Phone.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Artist.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\edits\\Age.js",[],"C:\\Users\\kirca\\Downloads\\vol1-main\\vol1-main\\frontend\\src\\Search.js",["129","130","131"],"// This is the page where the user is directed after logging in.\r\nimport \"./styles/home.css\";\r\nimport volumefy from \"./images/volumefy.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport ReactDOM from \"react-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst Search = () => {\r\n  \r\n  let history = useHistory();\r\n  \r\n  const [username, setUsername] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  var data;\r\n\r\n  // This function is to search the users.\r\n  const searchUser = () => {\r\n    Axios.post(\"http://localhost:3001/searchUser\", {\r\n      username: username,\r\n    }).then((response) => {\r\n      // console.log(response.data);\r\n      if (response.data) {\r\n        // setResult(response.data);\r\n        // console.log(result);\r\n        console.log(\"response.data\")\r\n        console.log(response.data);\r\n        var data = response.data;\r\n        console.log(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // On load, get the token from the local storage and get\r\n  // the usarname from it. Then, create a h2 element with\r\n  // that usarname.\r\n  React.useEffect(() => {\r\n    var response = localStorage.getItem(\"response\");\r\n    // console.log(response);\r\n    response = jwt.decode(response);\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(\"yarrak\");\r\n    // console.log(response);\r\n    // console.log(response.id);\r\n    response = response.username;\r\n    let h_element = React.createElement(\"h1\", null, \"- Hello, \", response, \"!\");\r\n    ReactDOM.render(h_element, document.getElementById(\"upper\"));\r\n  })\r\n\r\n  // This method is to delete the access token from the local storage\r\n  // and route back to the \"/\".\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // This method is to route to the home page.\r\n  const toHome = () => {\r\n    history.push(\"/Home\")\r\n  }\r\n\r\n  // This method is to route to the profile page.\r\n  const toProfile = () => {\r\n    history.push(\"/Profile\")\r\n  }\r\n\r\n    // This method is to route to the profile page.\r\n    const toSearch = () => {\r\n      history.push(\"/Search\")\r\n    }\r\n\r\n  return (\r\n    <body class=\"bMain\">\r\n    <div className=\"Main\" >\r\n      {/* Name and logo */}\r\n        <div id = \"header\" className = \"header\">\r\n            <img src={volumefy} className=\"logo2\"/>\r\n            <h1 className=\"vol\"> VOLUMEFY</h1>\r\n            <div id = \"upper\" className = \"upper\"></div>\r\n            <button className=\"logout\" onClick={logOut}>SIGN Out</button>\r\n            <hr/>\r\n        </div>\r\n        <div id = \"left\" className = \"left\">\r\n          <br />\r\n          <button className=\"homeButton\" onClick={toHome}>Home</button><br/><br/>\r\n          <button className=\"profileButton\" onClick={toProfile}>Profile</button><br/><br/>\r\n          <button className=\"searchButton\"  onClick={toSearch}>Search</button><br/><br/>\r\n          <button className=\"libraryButton\">Library</button>\r\n        </div>\r\n        <div id = \"middle\" className = \"middle\">\r\n          <h1>SEARCH</h1>\r\n          <input className=\"input\" type=\"text\" onChange={(event) => {setUsername(event.target.value);}}/>\r\n          <button onClick={searchUser}>Search</button>\r\n          {data ? (\r\n            data.map((val, key) => {\r\n              return (\r\n                <div className=\"employee\">\r\n                  <h3>username: {val.username}</h3>\r\n                  <h3>ID: {val.id}</h3>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <h1>userssssssssssssssss</h1>\r\n          )}\r\n        </div>\r\n        <div id = \"right\" className = \"right\">\r\n          <h2>Friends</h2>\r\n        </div>\r\n        \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Search;",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":27,"nodeType":"138","messageId":"139","endLine":5,"endColumn":36},{"ruleId":"136","severity":1,"message":"140","line":19,"column":13,"nodeType":"138","messageId":"139","endLine":19,"endColumn":21},{"ruleId":"136","severity":1,"message":"141","line":19,"column":23,"nodeType":"138","messageId":"139","endLine":19,"endColumn":29},{"ruleId":"136","severity":1,"message":"142","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":37,"column":13,"nodeType":"145","endLine":37,"endColumn":52},{"ruleId":"136","severity":1,"message":"142","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":14},{"ruleId":"136","severity":1,"message":"146","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":12},{"ruleId":"136","severity":1,"message":"147","line":63,"column":9,"nodeType":"138","messageId":"139","endLine":63,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":73,"column":9,"nodeType":"145","endLine":73,"endColumn":48},{"ruleId":"136","severity":1,"message":"142","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":45,"column":13,"nodeType":"145","endLine":45,"endColumn":51},{"ruleId":"132","replacedBy":"148"},{"ruleId":"134","replacedBy":"149"},{"ruleId":"136","severity":1,"message":"140","line":30,"column":13,"nodeType":"138","messageId":"139","endLine":30,"endColumn":21},{"ruleId":"136","severity":1,"message":"141","line":30,"column":23,"nodeType":"138","messageId":"139","endLine":30,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":46,"column":15,"nodeType":"145","messageId":"152","endLine":46,"endColumn":28},{"ruleId":"136","severity":1,"message":"142","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":45,"column":13,"nodeType":"145","endLine":45,"endColumn":51},{"ruleId":"136","severity":1,"message":"142","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":60,"column":13,"nodeType":"145","endLine":60,"endColumn":52},{"ruleId":"153","severity":1,"message":"154","line":75,"column":34,"nodeType":"155","messageId":"156","endLine":75,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":82,"column":27,"nodeType":"159","messageId":"160","endLine":82,"endColumn":29},{"ruleId":"136","severity":1,"message":"142","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":14},{"ruleId":"136","severity":1,"message":"146","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":12},{"ruleId":"136","severity":1,"message":"147","line":63,"column":9,"nodeType":"138","messageId":"139","endLine":63,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":73,"column":9,"nodeType":"145","endLine":73,"endColumn":48},{"ruleId":"136","severity":1,"message":"142","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":52,"column":13,"nodeType":"145","endLine":52,"endColumn":52},{"ruleId":"136","severity":1,"message":"142","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":37,"column":13,"nodeType":"145","endLine":37,"endColumn":52},{"ruleId":"136","severity":1,"message":"142","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"136","severity":1,"message":"161","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":15},{"ruleId":"136","severity":1,"message":"162","line":43,"column":9,"nodeType":"138","messageId":"139","endLine":43,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":52,"column":13,"nodeType":"145","endLine":52,"endColumn":52},{"ruleId":"136","severity":1,"message":"163","line":16,"column":10,"nodeType":"138","messageId":"139","endLine":16,"endColumn":16},{"ruleId":"136","severity":1,"message":"164","line":16,"column":18,"nodeType":"138","messageId":"139","endLine":16,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":83,"column":13,"nodeType":"145","endLine":83,"endColumn":52},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'loaded' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'getUsers' is assigned a value but never used.",["165"],["166"],"react/jsx-pascal-case","Imported JSX component Home_artist must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Profile' is defined but never used.","'setGender' is assigned a value but never used.","'result' is assigned a value but never used.","'setResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]